# 'Wine-to-rule-them-all' - Proton-TkG advanced config file

##
##   This config file contains advanced settings for your build.
##   For the basic configuration, see ../proton-tkg.cfg
##

# This is a simplified config file with minimal comments. See ../../wine-tkg-git/wine-tkg-profiles/sample-external-config.cfg for more details.
# Some options will be missing from this config file compared to wine-tkg-git as they are enforced.

# Proton branch to target for lsteamclient libs and steam helper on 4.x+ - When using a Wine 3.x base, "proton_3.16" branch will be enforced
_proton_branch="experimental_8.0"

# Set to "true" to use the "noruntime" proton toolmanifest if available
# Set to "sniper" to use the experimental sniper runtime
_nosteamruntime="false"

# Proton SDL Joystick support, xinput hacks and other gamepad additions. _gamepad_additions depends on _sdl_joy_support.
# This might be required for some FFB steering wheels, but can break gamepad support in some games.
_sdl_joy_support="false"
# ! _gamepad_additions="true" can sometimes break more than it fixes depending on the game, so feel free to tweak this !
_gamepad_additions="true"

# Disable nvapi and nvapi64 - Common fix for various games when using a Nvidia GPU
# Might create issues on some native vulkan game calling nvapi for some extremely dumb reason, such as Doom Eternal
_proton_nvapi_disable="false"

# Disable winedbg - (Used to fix GTA V online crash before Proton 5.0-4 02951753)
_proton_winedbg_disable="true"

# Enforce IMAGE_FILE_LARGE_ADDRESS_AWARE - Fixes 32-bit games hitting address space limitations.
# *Some* games might not like that (only known case so far is System Shock 2).
_proton_force_LAA="true"

# Enforce driver shader cache path when Steam's shader pre-caching is disabled
_proton_shadercache_path=""

# Enable the use of winelib steam.exe to launch games that checks if Steam is running such as Assetto Corsa - Only works with a Wine 4.0+ base
# Will disable "server-Desktop_Refcount" and "ws2_32-TransmitFile" patchsets on staging past 4e7071e4 (4.7+) to prevent crashing issues
_proton_use_steamhelper="true"

# Set to true to disable proton's steamclient lib substitution. Allows running windows steam client in proton (only affects 4.19+)
# ! This will prevent most Steam games to run directly from proton - You only want to use this as a secondary build for non-steam games or running windows steam/games from windows steam !
_steamclient_noswap="false"

# Proton wined3d-interop and friends for SteamVR support - Depends on _proton_fs_hack="true"
_steamvr_support="true"


# COMPILER/BUILD OPTIONS

# External config file to use - If the given file exists in path, it will override default config - Default is ~/.config/frogminer/proton-tkg.cfg
_EXT_CONFIG_PATH=~/.config/frogminer/proton-tkg.cfg

# Set to a desired additional tag to differentiate builds
_PROTON_NAME_ADDON=""

# Custom compiler root dirs - Leave empty to use system compilers
# Example: CUSTOM_MINGW_PATH="/home/frog/PKGBUILDS/mostlyportable-gcc/mingw-mostlyportable-9.2.0"
# Example: CUSTOM_GCC_PATH="/home/frog/PKGBUILDS/mostlyportable-gcc/gcc-mostlyportable-9.2.0"
CUSTOM_MINGW_PATH=""
CUSTOM_GCC_PATH=""

_LOCAL_OPTIMIZED="true"
_GCC_FLAGS="-O2 -ftree-vectorize -Wno-error=implicit-function-declaration -Wno-error=incompatible-pointer-types"
_LD_FLAGS="-Wl,-O1,--sort-common,--as-needed"
_CROSS_FLAGS="-O2 -ftree-vectorize -Wno-error=implicit-function-declaration -Wno-error=incompatible-pointer-types"
_CROSS_LD_FLAGS="-Wl,-O1,--sort-common,--as-needed"
_NUKR="true"
_NOCOMPILE="false"
_NOINITIALPROMPT="false"

# Set the method used to do PE files fixups to please some DRMs and other checks - Default is "objcopy", alternative is "py" (which will run legacy pefixup.py proton script)
# !!! the "py" method allows Destiny 2 checks to pass but will get you banned !!!
_pefixup="objcopy"

# Set to true to forcefully disable using ccache (else it'll be used if detected).
_NOCCACHE="false"

# Set to true to disable usage of 32-bit unix libs and use Wine 8.0+ experimental WoW64 for 32-bit apps. Default is "false" as it's still under development.
_NOLIB32="false"

# Optionally set additional make dependencies for makepkg builds. Multiple elements should be separated by a space.
# Only affects makepkg
_user_makedeps=""

# Strip libs for smaller footprint (--strip-unneeded) - Not recommended for debugging
_pkg_strip="true"

# Set to "true" to generate patchsets for each parts of the tree patching steps, found in `src/wine source dir` (default src/wine-mirror-git)
# 01-reverts - 02-pre-staging - 03-staging - 04-post-staging - 05-hotfixes - 06-userpatches - 07-tags-n-polish
_generate_patchsets="false"

# Set to "true" to log compiler warnings and errors to a debug.log file
_log_errors_to_file="false"

# Set to true to remove trailing patchmsg strings in logs - Useful to review the list of patches used without fluff
_nopatchmsg="false"


# WINE FLAVOUR SETTINGS

# Set to the path of a custom wine source repo if desired (i.e. https://github.com/ValveSoftware/wine). Leave empty to use official wine source.
# Use the _plain_version option to target a specific commit for this source
# ! Make sure to disable staging if your source isn't compatible with it or it will fail to apply !
_custom_wine_source=""

# Add a configurable spin count to fsync - might help performance but can introduce stability issues/hanging. Try setting WINEFSYNC_SPINCOUNT=100 envvar
_fsync_spincounts="true"

_github_mirrorsrc="false"

# Sets custom configure-args for 64-bit, separated by a space (example: "--without-mingw --with-vkd3d")
_configure_userargs64="--with-x --with-gstreamer --with-xattr"
# Sets custom configure-args for 32-bit, separated by a space (example: "--without-mingw --with-vkd3d")
_configure_userargs32="--with-x --with-gstreamer --with-xattr"

# Set to false to add DXVK configuration support to Wine's DXGI, allowing for VKD3D to run while keeping DXVK dxgi functionalities.
# !! For DXVK to work properly with this option set to false, you'll need a DXVK build that comes with dxvk_config.dll !!
# Keep in mind Wine's dxgi can be more unstable and less compatible when used with DXVK.
_dxvk_dxgi="true"

# Specify DXVK release version, ex: "v1.6.1", default is "latest"
_dxvk_version=""

# staging
# You can optionally uncomment the _staging_userargs="" option below to disable desired wine-staging patchsets.
# For example, to disable the 'wined3d-Indexed_Vertex_Blending' patchset, the line below would look like this : _staging_userargs="-W wined3d-Indexed_Vertex_Blending"
# You can also disable multiple patchsets ('wined3d-WINED3D_RS_COLORWRITEENABLE' and 'wined3d-Indexed_Vertex_Blending'
# in the following example : _staging_userargs="-W wined3d-WINED3D_RS_COLORWRITEENABLE -W wined3d-Indexed_Vertex_Blending"
_staging_userargs="-W ntdll-NtAlertThreadByThreadId"

_staging_pulse_disable="false"

# OTHER PATCHES

_CSMT_toggle="true"
_GLSL_toggle="false"
_MIME_NOPE="true"
_lowlatency_audio="false"
_launch_with_dedicated_gpu="false"
_large_address_aware="true"
_stg_shared_mem_default="false"
_proton_rawinput="true"

# Proton Bcrypt patches - Fixes RDR2 online, notably - Replaces Staging's bcrypt-ECDHSecretAgreement
_proton_bcrypt="true"

# Enforce mscvrt Dlls to native then builtin - from Proton - Can be detrimental on 4.3+
_msvcrt_nativebuiltin="true"

# Use Proton's updated win10 versioning and better productid - Necessary to enable d3d12 (for use with vkd3d) in some games
# Also sets the default wine version to win10 (instead of win7) on Wine <8.1
_win10_default="true"
