#!/bin/bash

	# fastsync / winesync
	if [ "$_use_fastsync" = "true" ] || [ "$_use_ntsync" = "true" ] && [[ "$_custom_wine_source" = *"ValveSoftware"* ]]; then # not allowed on Valve tree
	  error "NTsync/Winesync is not currently supported on Valve trees. It'll be forcibly disabled."
	elif [ "$_use_fastsync" = "true" ]; then
	  # check Linux headers
	  winesync_header_check=$(echo '#include <linux/winesync.h>' | gcc -H -E -fsyntax-only - 2>&1 | head -n1 | cut -d' ' -f2-)
	  if [[ ! -s $winesync_header_check ]]; then
	    error $winesync_header_check
	    error "Winesync header was not found. Build is forcibly prevented."
	    error 'Please use linux-tkg build with _winesync="true" or https://aur.archlinux.org/packages/winesync-dkms/'
	    exit 1
	  fi

	  if [ "$_use_ntsync" = "true" ]; then
		error "fastsync conflicts with _use_ntsync. Build is forcibly prevented. Please disable _use_ntsync in your .cfg to use fastsync"
		exit 1
	  fi

	  if [ "$_use_staging" = "true" ]; then
	    if [ "$_staging_esync" = "true" ] && [ "$_use_fsync" = "true" ]; then
	      if [ "$_protonify" = "true" ]; then
	        if ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 59485f00c917061c097c1805d7fa7f61c380c749 HEAD ); then
	          _patchname='fastsync-staging-protonify.patch' && _patchmsg="Using fastsync (Esync/Fsync compatible) patchset" && nonuser_patcher
	        elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 7b243afc6322fa82ac42cec6de247a642e16b5a5 HEAD ); then
	          _patchname='fastsync-staging-protonify-59485f0.patch' && _patchmsg="Using fastsync (Esync/Fsync compatible) patchset" && nonuser_patcher
	        elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 03c1930b74e9a41da84fd712a3ebdbb4f7fcbcb5 HEAD ); then
	          _patchname='fastsync-staging-protonify-7b243af.patch' && _patchmsg="Using fastsync (Esync/Fsync compatible) patchset" && nonuser_patcher
	        elif ( cd "${srcdir}"/"${_stgsrcdir}" && git merge-base --is-ancestor e534d6546a5be9f1cd53a0ea3ac79db7d977bed7 HEAD ); then
	          _patchname='fastsync-staging-protonify-03c1930.patch' && _patchmsg="Using fastsync (Esync/Fsync compatible) patchset" && nonuser_patcher
	        elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 36b45c6d1c124dd16b3475ba743fcbbc99d6862d HEAD ); then
	          _patchname='fastsync-staging-protonify-e534d65.patch' && _patchmsg="Using fastsync (Esync/Fsync compatible) patchset" && nonuser_patcher
	        fi
	      else
	        if ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 59485f00c917061c097c1805d7fa7f61c380c749 HEAD ); then
	          _patchname='fastsync-staging.patch' && _patchmsg="Using fastsync (Esync/Fsync compatible) patchset" && nonuser_patcher
	        elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 7b243afc6322fa82ac42cec6de247a642e16b5a5 HEAD ); then
	          _patchname='fastsync-staging-59485f0.patch' && _patchmsg="Using fastsync (Esync/Fsync compatible) patchset" && nonuser_patcher
	        elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 03c1930b74e9a41da84fd712a3ebdbb4f7fcbcb5 HEAD ); then
	          _patchname='fastsync-staging-7b243af.patch' && _patchmsg="Using fastsync (Esync/Fsync compatible) patchset" && nonuser_patcher
	        elif ( cd "${srcdir}"/"${_stgsrcdir}" && git merge-base --is-ancestor e534d6546a5be9f1cd53a0ea3ac79db7d977bed7 HEAD ); then
	          _patchname='fastsync-staging-03c1930.patch' && _patchmsg="Using fastsync (Esync/Fsync compatible) patchset" && nonuser_patcher
	        elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 36b45c6d1c124dd16b3475ba743fcbbc99d6862d HEAD ); then
	          _patchname='fastsync-staging-e534d65.patch' && _patchmsg="Using fastsync (Esync/Fsync compatible) patchset" && nonuser_patcher
	        fi
	      fi
	    else
	      error "Fastsync for Staging trees depends on _use_fsync. Build is forcibly prevented. Please enable _use_fsync in your .cfg to use fastsync"
	      exit 1
	    fi
	  else
	    if [ "$_use_esync" = "false" ] && [ "$_use_fsync" = "false" ]; then
	      if ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 59485f00c917061c097c1805d7fa7f61c380c749 HEAD); then
	        _patchname='fastsync-mainline.patch' && _patchmsg="Using fastsync (mainline) patchset" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 7b243afc6322fa82ac42cec6de247a642e16b5a5 HEAD); then
	        _patchname='fastsync-mainline-59485f0.patch' && _patchmsg="Using fastsync (mainline) patchset" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 03c1930b74e9a41da84fd712a3ebdbb4f7fcbcb5 HEAD ); then
	        _patchname='fastsync-mainline-7b243af.patch' && _patchmsg="Using fastsync (mainline) patchset" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor f076e5f85490a44fd34057df9af1c3ae3e7d5d3b HEAD ); then
	        _patchname='fastsync-mainline-03c1930.patch' && _patchmsg="Using fastsync (mainline) patchset" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 36b45c6d1c124dd16b3475ba743fcbbc99d6862d HEAD ); then
	        _patchname='fastsync-mainline-f076e5f.patch' && _patchmsg="Using fastsync (mainline) patchset" && nonuser_patcher
	      fi
	    else
	      error "Fastsync for Plain trees conflicts with _use_esync and _use_fsync. Build is forcibly prevented. Please disable them in your .cfg to use fastsync"
	      exit 1
	    fi
	  fi
	  if [ "$_use_fastsync" = "true" ] && [ "$_clock_monotonic" = "true" ] && ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 36b45c6d1c124dd16b3475ba743fcbbc99d6862d HEAD ); then
	    _patchname='fastsync-clock_monotonic-fixup.patch' && _patchmsg="Applied fastsync fix due clock_monotonic" && nonuser_patcher
	  fi

	elif [ "$_use_ntsync" = "true" ]; then

	  # check Linux headers
	  ntsync_header_check=$(echo '#include <linux/ntsync.h>' | gcc -H -E -fsyntax-only - 2>&1 | head -n1 | cut -d' ' -f2-)
	  if [[ ! -s $ntsync_header_check ]]; then
	    error $ntsync_header_check
	    error "NTsync header was not found. Build is forcibly prevented."
	    error 'Please use linux-tkg build with _ntsync="true" or https://aur.archlinux.org/packages/ntsync-dkms/'
	    exit 1
	  fi

	  if [ "$_staging_esync" = "true" ] && [ "$_use_fsync" = "true" ]; then
		error "NTsync conflicts with _use_esync and _use_fsync. Build is forcibly prevented. Please disable them in your .cfg to use ntsync"
		exit 1
	  fi

	  if [ "$_use_fastsync" = "true" ]; then
		error "NTsync conflicts with _use_fastsync. Build is forcibly prevented. Please disable _use_fastsync in your .cfg to use ntsync"
		exit 1
	  fi

      if [ "$_use_staging" = "true" ]; then
		# Check config.h.in for a difference with the repository
		if ( grep "Define to 1 if you have the \`prctl' function." "${srcdir}"/"${_winesrcdir}"/include/config.h.in >> /dev/null ); then
		  _patchname='ntsync-config.h.in-org.patch' && _patchmsg="Using original config.h.in patchset for ntsync5" && nonuser_patcher
		else
		  _patchname='ntsync-config.h.in-alt.patch' && _patchmsg="Using alternative config.h.in patchset for ntsync5" && nonuser_patcher
		fi
        if [ "$_protonify" = "true" ]; then
		  if ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor f41c434b88c63984082ad9d4627bef5d51434871 HEAD ); then
	      _patchname='ntsync5-staging-protonify.patch' && _patchmsg="Using ntsync patchset" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor fd3de9005ef504a810aeb828c5b491a7bebd7888 HEAD ); then
	      _patchname='ntsync5-staging-protonify-f41c434b.patch' && _patchmsg="Using ntsync patchset" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 7eb72b7bb3d3ea771efddcb5273e8a69456548ff HEAD ); then
	      _patchname='ntsync5-staging-protonify-fd3de90.patch' && _patchmsg="Using ntsync patchset" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 59485f00c917061c097c1805d7fa7f61c380c749 HEAD ); then
	      _patchname='ntsync5-staging-protonify-7eb72b7b.patch' && _patchmsg="Using ntsync patchset" && nonuser_patcher
	      fi
        else
		  if ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor f41c434b88c63984082ad9d4627bef5d51434871 HEAD ); then
	      _patchname='ntsync5-staging.patch' && _patchmsg="Using ntsync patchset" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor fd3de9005ef504a810aeb828c5b491a7bebd7888 HEAD ); then
	      _patchname='ntsync5-staging-f41c434b.patch' && _patchmsg="Using ntsync patchset" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 7eb72b7bb3d3ea771efddcb5273e8a69456548ff HEAD ); then
	      _patchname='ntsync5-staging-fd3de90.patch' && _patchmsg="Using ntsync patchset" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 59485f00c917061c097c1805d7fa7f61c380c749 HEAD ); then
	      _patchname='ntsync5-staging-7eb72b7b.patch' && _patchmsg="Using ntsync patchset" && nonuser_patcher
	      fi
		fi
	  else
	    if [ "$_protonify" = "true" ]; then
		  if ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor f41c434b88c63984082ad9d4627bef5d51434871 HEAD ); then
		    _patchname='ntsync5-protonify.patch' && _patchmsg="Using ntsync patchset" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor fd3de9005ef504a810aeb828c5b491a7bebd7888 HEAD ); then
	      _patchname='ntsync5-protonify-f41c434b.patch' && _patchmsg="Using ntsync patchset" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 7eb72b7bb3d3ea771efddcb5273e8a69456548ff HEAD ); then
	      _patchname='ntsync5-protonify-fd3de90.patch' && _patchmsg="Using ntsync patchset" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 59485f00c917061c097c1805d7fa7f61c380c749 HEAD ); then
	      _patchname='ntsync5-protonify-7eb72b7b.patch' && _patchmsg="Using ntsync patchset" && nonuser_patcher
		  fi
		else
	      if ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor f41c434b88c63984082ad9d4627bef5d51434871 HEAD ); then
		    _patchname='ntsync5-mainline.patch' && _patchmsg="Using ntsync patchset" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor fd3de9005ef504a810aeb828c5b491a7bebd7888 HEAD ); then
	      _patchname='ntsync5-mainline-f41c434b.patch' && _patchmsg="Using ntsync patchset" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 7eb72b7bb3d3ea771efddcb5273e8a69456548ff HEAD ); then
	      _patchname='ntsync5-mainline-fd3de90.patch' && _patchmsg="Using ntsync patchset" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 59485f00c917061c097c1805d7fa7f61c380c749 HEAD ); then
	      _patchname='ntsync5-mainline-7eb72b7b.patch' && _patchmsg="Using ntsync patchset" && nonuser_patcher
		  fi
		fi
	  fi
	fi
