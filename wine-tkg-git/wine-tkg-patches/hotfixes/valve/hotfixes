#!/bin/bash

# When not building proton, get rid of steam-specific patches
if [ "$_EXTERNAL_INSTALL" != "proton" ]; then
  if [[ "$_plain_version" = *_7.0 ]]; then
    if [[ "$_LOCAL_PRESET" = valve-ex* ]]; then
      cp "$_where"/wine-tkg-patches/hotfixes/valve/de-steamify-be.mypatch "$_where"/
    else
      cp "$_where"/wine-tkg-patches/hotfixes/valve/de-steamify.mypatch "$_where"/
    fi
  elif [[ "$_plain_version" = *_8.0 ]]; then
    if [ "$_LOCAL_PRESET" = "valve" ]; then
      cp "$_where"/wine-tkg-patches/hotfixes/valve/de-steamify-80.mypatch "$_where"/
    elif [[ "$_LOCAL_PRESET" = valve-ex* ]]; then
      cp "$_where"/wine-tkg-patches/hotfixes/valve/de-steamify-80-be.mypatch "$_where"/
    fi
  elif [[ "$_plain_version" = *_9.0 ]]; then
    if [ "$_LOCAL_PRESET" = "valve" ]; then
      cp "$_where"/wine-tkg-patches/hotfixes/valve/de-steamify-90.mypatch "$_where"/
    elif [[ "$_LOCAL_PRESET" = valve-ex* ]]; then
      cp "$_where"/wine-tkg-patches/hotfixes/valve/de-steamify-90.mypatch "$_where"/
    fi
    #if [ "$(_os_name)" = "ubuntu" ]; then
    #  warning "Disabling mediaconv for buntu"
    #  cp "$_where"/wine-tkg-patches/hotfixes/valve/fixes/buntu/disable_mediaconv.myrevert "$_where"/
    #fi
  fi
fi

if [ "$_steamclient_noswap" = "true" ]; then
  if [[ "$_LOCAL_PRESET" = valve-ex* ]]; then
    cp "$_where"/wine-tkg-patches/hotfixes/valve/0001-proton-steamclient-swap-revert-be.mypatch "$_where"/
  else
    cp "$_where"/wine-tkg-patches/hotfixes/valve/0001-proton-steamclient-swap-revert.mypatch "$_where"/
  fi
fi

if [ "$_use_staging" = "true" ]; then
    if [ "$_LOCAL_PRESET" = "valve-exp-bleeding" ] && [[ "$_plain_version" = *_7.0 ]]; then
      ( cd "${srcdir}/$_stgsrcdir" && patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/fixes/cryptext-CryptExtOpenCER/Rebase_against_be5d60d949c470d8039649ee1f7488a59a1c31bc.patch >> "$_where"/prepare.log )
    fi

    # nvapi-revert
    _hotfix_mainlinereverts+=(fdfb4b925f52fbec580dd30bef37fb22c219c667)

    # gallium nine compat fix
    _hotfix_mainlinereverts+=(96b82203f192eade6910f4ac2ecb188e27d22feb)

    # Bring back configure files. Staging uses them to regenerate fresh ones
    # https://github.com/ValveSoftware/wine/commit/e813ca5771658b00875924ab88d525322e50d39f
    _hotfix_mainlinereverts+=(e813ca5771658b00875924ab88d525322e50d39f)

  if [[ "$_plain_version" = *_9.0 ]]; then
    _staging_args+=(-W winex11-_NET_ACTIVE_WINDOW \
                    -W user32-alttab-focus \
                    -W winex11-WM_WINDOWPOSCHANGING \
                    -W winex11-MWM_Decorations \
                    -W ntdll-Syscall_Emulation \
                    -W ntdll-Junction_Points \
                    -W server-File_Permissions \
                    -W server-Stored_ACLs \
                    -W eventfd_synchronization \
                    -W d3dx11_43-D3DX11CreateTextureFromMemory \
                    -W dbghelp-Debug_Symbols \
                    -W ddraw-Device_Caps \
                    -W ddraw-GetPickRecords \
                    -W Pipelight \
                    -W server-PeekMessage \
                    -W server-Realtime_Priority \
                    -W server-Signal_Thread \
                    -W loader-KeyboardLayouts \
                    -W msxml3-FreeThreadedXMLHTTP60 \
                    -W ntdll-ForceBottomUpAlloc \
                    -W ntdll-WRITECOPY \
                    -W ntdll-CriticalSection \
                    -W ntdll-Exception \
                    -W ntdll-Hide_Wine_Exports \
                    -W ntdll-Serial_Port_Detection \
                    -W server-default_integrity \
                    -W user32-rawinput-mouse \
                    -W user32-rawinput-mouse-experimental \
                    -W user32-recursive-activation \
                    -W windows.networking.connectivity-new-dll \
                    -W wineboot-ProxySettings \
                    -W winex11-UpdateLayeredWindow \
                    -W winex11-Vulkan_support \
                    -W wintab32-improvements \
                    -W xactengine3_7-PrepareWave \
                    -W xactengine-initial \
                    -W kernel32-CopyFileEx \
                    -W shell32-Progress_Dialog \
                    -W shell32-ACE_Viewer \
                    -W fltmgr.sys-FltBuildDefaultSecurityDescriptor \
                    -W inseng-Implementation \
                    -W ntdll-RtlQueryPackageIdentity \
                    -W packager-DllMain \
                    -W wscript-support-d-u-switches \
                    -W wininet-Cleanup \
                    -W sapi-ISpObjectToken-CreateInstance \
                    -W cryptext-CryptExtOpenCER \
                    -W shell32-NewMenu_Interface \
                    -W wintrust-WTHelperGetProvCertFromChain \
                    -W user32-FlashWindowEx \
                    -W wined3d-zero-inf-shaders \
                    -W kernel32-Debugger \
                    -W ntdll-NtDevicePath \
                    -W ntdll-HashLinks \
                    -W ntdll_reg_flush \
                    -W odbc-remove-unixodbc \
                    -W winspool.drv-ClosePrinter \
                    -W winmm-mciSendCommandA \
                    -W winex11-XEMBED \
                    -W winex11-CandidateWindowPos \
                    -W winex11-Window_Style \
                    -W winex11-ime-check-thread-data \
                    -W winex11-Fixed-scancodes \
                    -W winex11.drv-Query_server_position \
                    -W user32-Mouse_Message_Hwnd \
                    -W winepulse-PulseAudio_Support \
                    -W d3dx9_36-D3DXStubs \
                    -W shell32-registry-lookup-app \
                    -W ntdll-ext4-case-folder)
  elif [[ "$_plain_version" = *_8.0 ]]; then
    _staging_args+=(-W winex11-_NET_ACTIVE_WINDOW \
                    -W user32-alttab-focus \
                    -W winex11-WM_WINDOWPOSCHANGING \
                    -W winex11-MWM_Decorations \
                    -W ntdll-Syscall_Emulation \
                    -W ntdll-Junction_Points \
                    -W server-File_Permissions \
                    -W server-Stored_ACLs \
                    -W eventfd_synchronization \
                    -W d3dx11_43-D3DX11CreateTextureFromMemory \
                    -W dbghelp-Debug_Symbols \
                    -W ddraw-Device_Caps \
                    -W Pipelight \
                    -W dinput-joy-mappings \
                    -W server-PeekMessage \
                    -W server-Realtime_Priority \
                    -W server-Signal_Thread \
                    -W loader-KeyboardLayouts \
                    -W msxml3-FreeThreadedXMLHTTP60 \
                    -W ntdll-ForceBottomUpAlloc \
                    -W ntdll-WRITECOPY \
                    -W ntdll-Builtin_Prot \
                    -W ntdll-CriticalSection \
                    -W ntdll-Exception \
                    -W ntdll-Hide_Wine_Exports \
                    -W ntdll-Serial_Port_Detection \
                    -W server-default_integrity \
                    -W user32-rawinput-mouse \
                    -W user32-rawinput-mouse-experimental \
                    -W user32-recursive-activation \
                    -W windows.networking.connectivity-new-dll \
                    -W wineboot-ProxySettings \
                    -W winex11-UpdateLayeredWindow \
                    -W winex11-Vulkan_support \
                    -W winex11-wglShareLists \
                    -W wintab32-improvements \
                    -W xactengine3_7-PrepareWave \
                    -W xactengine-initial \
                    -W kernel32-CopyFileEx \
                    -W shell32-Progress_Dialog \
                    -W shell32-ACE_Viewer \
                    -W fltmgr.sys-FltBuildDefaultSecurityDescriptor \
                    -W inseng-Implementation \
                    -W ntdll-RtlQueryPackageIdentity \
                    -W packager-DllMain \
                    -W winemenubuilder-Desktop_Icon_Path \
                    -W wscript-support-d-u-switches \
                    -W wininet-Cleanup \
                    -W sapi-ISpObjectToken-CreateInstance \
                    -W cryptext-CryptExtOpenCER \
                    -W shell32-NewMenu_Interface \
                    -W wintrust-WTHelperGetProvCertFromChain \
                    -W user32-FlashWindowEx \
                    -W wined3d-zero-inf-shaders \
                    -W kernel32-Debugger \
                    -W mfplat-streaming-support \
                    -W ntdll-Placeholders \
                    -W ntdll-NtDevicePath \
                    -W ntdll-wine-frames \
                    -W winemenubuilder-integration \
                    -W winspool.drv-ClosePrinter \
                    -W winmm-mciSendCommandA \
                    -W winemenubuilder-Desktop_Icon_Path \
                    -W winemenubuilder-integration \
                    -W winex11-XEMBED \
                    -W winex11-CandidateWindowPos \
                    -W winex11-Window_Style \
                    -W winex11-ime-check-thread-data \
                    -W winex11.drv-Query_server_position \
                    -W user32-Mouse_Message_Hwnd \
                    -W wined3d-SWVP-shaders \
                    -W wined3d-Indexed_Vertex_Blending \
                    -W winepulse-PulseAudio_Support \
                    -W d3dx9_36-D3DXStubs \
                    -W shell32-registry-lookup-app)
    if [[ "$_LOCAL_PRESET" = valve-ex* ]]; then
      _staging_args+=(-W ntdll-ext4-case-folder)
    fi
  else
    _staging_args+=(-W winex11-_NET_ACTIVE_WINDOW \
                    -W winex11-WM_WINDOWPOSCHANGING \
                    -W winex11-MWM_Decorations \
                    -W winex11-key_translation \
                    -W ntdll-Syscall_Emulation \
                    -W ntdll-Junction_Points \
                    -W server-File_Permissions \
                    -W server-Stored_ACLs \
                    -W eventfd_synchronization \
                    -W d3dx11_43-D3DX11CreateTextureFromMemory \
                    -W dbghelp-Debug_Symbols \
                    -W dwrite-FontFallback \
                    -W ntdll-DOS_Attributes \
                    -W Pipelight \
                    -W dinput-joy-mappings \
                    -W server-Key_State \
                    -W server-PeekMessage \
                    -W server-Realtime_Priority \
                    -W server-Signal_Thread \
                    -W loader-KeyboardLayouts \
                    -W mshtml-HTMLLocation_put_hash \
                    -W msxml3-FreeThreadedXMLHTTP60 \
                    -W ntdll-ForceBottomUpAlloc \
                    -W ntdll-WRITECOPY \
                    -W ntdll-Builtin_Prot \
                    -W ntdll-CriticalSection \
                    -W ntdll-Exception \
                    -W ntdll-Hide_Wine_Exports \
                    -W ntdll-Serial_Port_Detection \
                    -W secur32-InitializeSecurityContextW \
                    -W server-default_integrity \
                    -W user32-rawinput-mouse \
                    -W user32-rawinput-mouse-experimental \
                    -W user32-recursive-activation \
                    -W windows.networking.connectivity-new-dll \
                    -W wineboot-ProxySettings \
                    -W winex11-UpdateLayeredWindow \
                    -W winex11-Vulkan_support \
                    -W wintab32-improvements \
                    -W xactengine3_7-PrepareWave \
                    -W xactengine3_7-Notification \
                    -W xactengine-initial \
                    -W kernel32-CopyFileEx \
                    -W shell32-Progress_Dialog \
                    -W shell32-ACE_Viewer \
                    -W fltmgr.sys-FltBuildDefaultSecurityDescriptor \
                    -W inseng-Implementation \
                    -W ntdll-RtlQueryPackageIdentity \
                    -W packager-DllMain \
                    -W winemenubuilder-Desktop_Icon_Path \
                    -W wscript-support-d-u-switches \
                    -W sapi-ISpObjectToken-CreateInstance \
                    -W sapi-iteration-tokens \
                    -W wininet-Cleanup \
                    -W winex11-wglShareLists \
                    -W ntdll-ApiSetMap \
                    -W ddraw-Device_Caps \
                    -W ddraw-version-check \
                    -W wintrust-WTHelperGetProvCertFromChain \
                    -W shell32-NewMenu_Interface \
                    -W user32-FlashWindowEx \
                    -W user32-MessageBox_WS_EX_TOPMOST \
                    -W cryptext-CryptExtOpenCER \
                    -W wined3d-zero-inf-shaders \
                    -W winex11-XEMBED)
  fi
fi

_proton_staging() {
    if [[ "$_plain_version" = *_9.0 ]]; then
      _proton_target="90"
    elif [[ "$_plain_version" = *_8.0 ]]; then
      _proton_target="80"
    else
      _proton_target="70"
    fi

    if [ "$_proton_target" = "80" ] || [ "$_proton_target" = "70" ]; then
      msg2 "Manual application of some staging patches..."
      echo -e "\nManually applying some staging patches..." >> "$_where"/prepare.log

      patch -RNp1 < "${srcdir}"/"$_stgsrcdir"/patches/Compiler_Warnings/0031-include-Check-element-type-in-CONTAINING_RECORD-and-.patch >> "$_where"/prepare.log

      if [[ "$_plain_version" != *_8.0 ]]; then
        patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/xactengine3_7-Notification/0001-xactengine3.7-Delay-Notication-for-WAVEBANKPREPARED.patch >> "$_where"/prepare.log
        patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/xactengine3_7-Notification/0002-xactengine3_7-Record-context-for-each-notications.patch >> "$_where"/prepare.log
      fi

      patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/xactengine3_7-PrepareWave/0002-xactengine3_7-Implement-IXACT3Engine-PrepareStreamin.patch >> "$_where"/prepare.log
      patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/xactengine3_7-PrepareWave/0003-xactengine3_7-Implement-IXACT3Engine-PrepareInMemory.patch >> "$_where"/prepare.log

      if [[ "$_plain_version" = *_8.0 ]]; then
        if [[ "$_LOCAL_PRESET" = valve-ex* ]]; then
          patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/loader-KeyboardLayouts/0001-loader-Add-Keyboard-Layouts-registry-enteries.patch >> "$_where"/prepare.log
          patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/loader-KeyboardLayouts/0002-user32-Improve-GetKeyboardLayoutList.patch >> "$_where"/prepare.log
        fi
      else
        patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/loader-KeyboardLayouts/0001-loader-Add-Keyboard-Layouts-registry-enteries.patch >> "$_where"/prepare.log
        patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/loader-KeyboardLayouts/0002-user32-Improve-GetKeyboardLayoutList.patch >> "$_where"/prepare.log
        patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/ntdll-Exception/0002-ntdll-OutputDebugString-should-throw-the-exception-a.patch >> "$_where"/prepare.log
      fi

      patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/ntdll-Hide_Wine_Exports/0001-ntdll-Add-support-for-hiding-wine-version-informatio.patch >> "$_where"/prepare.log

      if [[ "$_plain_version" != *_8.0 ]]; then
        patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/secur32-InitializeSecurityContextW/0001-secur32-Input-Parameter-should-be-NULL-on-first-call.patch >> "$_where"/prepare.log
      fi

      patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/winex11-UpdateLayeredWindow/0001-winex11-Fix-alpha-blending-in-X11DRV_UpdateLayeredWi.patch >> "$_where"/prepare.log

      if [[ "$_plain_version" != *_8.0 ]]; then
        patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/ntdll-ApiSetMap/0001-ntdll-Add-dummy-apiset-to-PEB.patch >> "$_where"/prepare.log
      fi

      patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/shell32-NewMenu_Interface/0001-shell32-Implement-NewMenu-with-new-folder-item.patch >> "$_where"/prepare.log
      patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/cryptext-CryptExtOpenCER/0001-cryptext-Implement-CryptExtOpenCER.patch >> "$_where"/prepare.log

      if [[ "$_plain_version" = *_8.0 ]]; then
        patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/kernel32-Debugger/0001-kernel32-Always-start-debugger-on-WinSta0.patch
        patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/winemenubuilder-integration/0001-winemenubuilder-Blacklist-desktop-integration-for-ce.patch
        #patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/winex11-XEMBED/0001-winex11-Enable-disable-windows-when-they-are-un-mapped.patch
        patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/winepulse-PulseAudio_Support/0001-winepulse.drv-Use-a-separate-mainloop-and-ctx-for-pu.patch
        if [[ "$_LOCAL_PRESET" = valve-ex* ]]; then
          patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/shell32-registry-lookup-app/0001-shell32-Append-.exe-when-registry-lookup-fails-first.patch
          patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/ntdll-ext4-case-folder/0002-ntdll-server-Mark-drive_c-as-case-insensitive-when-c.patch >> "$_where"/prepare.log
        fi
      fi

      # Cherry picked GE patches
      patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/d3dx11_43-D3DX11CreateTextureFromMemory/0001-d3dx11_43-Implement-D3DX11GetImageInfoFromMemory.patch
      patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/d3dx11_43-D3DX11CreateTextureFromMemory/0002-d3dx11_42-Implement-D3DX11CreateTextureFromMemory.patch

      if [[ "$_plain_version" != *_8.0 ]]; then
        patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/ntdll-DOS_Attributes/0001-ntdll-Implement-retrieving-DOS-attributes-in-fd_-get.patch
        patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/ntdll-DOS_Attributes/0003-ntdll-Implement-storing-DOS-attributes-in-NtSetInfor.patch
        patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/ntdll-DOS_Attributes/0004-ntdll-Implement-storing-DOS-attributes-in-NtCreateFi.patch
        patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/ntdll-DOS_Attributes/0005-libport-Add-support-for-Mac-OS-X-style-extended-attr.patch
        patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/ntdll-DOS_Attributes/0006-libport-Add-support-for-FreeBSD-style-extended-attri.patch
        patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/ntdll-DOS_Attributes/0007-ntdll-Perform-the-Unix-style-hidden-file-check-withi.patch
        patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/ntdll-DOS_Attributes/0008-ntdll-Always-store-SAMBA_XATTR_DOS_ATTRIB-when-path-.patch
      fi

      patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/ntdll-Serial_Port_Detection/0001-ntdll-Do-a-device-check-before-returning-a-default-s.patch
      patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/rawinput/0006-winex11.drv-Send-relative-RawMotion-events-unprocess.patch
      patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/windows.networking.connectivity-new-dll/0001-include-Add-windows.networking.connectivity.idl.patch
      patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/windows.networking.connectivity-new-dll/0002-include-Add-windows.networking.idl.patch

      patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/windows.networking.connectivity-new-dll/0003-windows.networking.connectivity-Add-stub-dll.patch
      patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/windows.networking.connectivity-new-dll/0004-windows.networking.connectivity-Implement-IActivatio.patch
      patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/windows.networking.connectivity-new-dll/0005-windows.networking.connectivity-Implement-INetworkIn.patch
      patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/windows.networking.connectivity-new-dll/0006-windows.networking.connectivity-Registry-DLL.patch
      patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/windows.networking.connectivity-new-dll/0007-windows.networking.connectivity-Implement-INetworkIn.patch
      patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/windows.networking.connectivity-new-dll/0008-windows.networking.connectivity-IConnectionProfile-G.patch
      if [[ "$_plain_version" = *_8.0 ]] && [[ "$_LOCAL_PRESET" = valve-ex* ]]; then
        patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/winex11-Vulkan_support/0001-winex11-Specify-a-default-vulkan-driver-if-one-not-f-be.patch
      else
        patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/winex11-Vulkan_support/0001-winex11-Specify-a-default-vulkan-driver-if-one-not-f.patch
      fi
      patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/xactengine-initial/0001-x3daudio1_7-Create-import-library.patch

      if [[ "$_plain_version" != *_8.0 ]]; then
        patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/xactengine3_7-callbacks/0001-Add-support-for-private-contexts.patch
        patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/xactengine3_7-callbacks/0002-xactengine3_7-notifications.patch
        patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/xactengine3_7-callbacks/0003-Send-NOTIFY_CUESTOP-when-Stop-is-called.patch
        patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/xactengine3_7-callbacks/0004-xactengine3_7-Don-t-use-switch-with-constant-integer.patch
        patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/nvcuda/0016-nvcuda-Make-nvcuda-attempt-to-load-libcuda.so.1.patch
        patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/winemenubuilder-Desktop_Icon_Path/0001-winemenubuilder-Create-desktop-shortcuts-with-absolu.patch
      fi

      patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/fltmgr.sys-FltBuildDefaultSecurityDescriptor/0001-fltmgr.sys-Implement-FltBuildDefaultSecurityDescript.patch
      patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/fltmgr.sys-FltBuildDefaultSecurityDescriptor/0002-fltmgr.sys-Create-import-library.patch
      patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/fltmgr.sys-FltBuildDefaultSecurityDescriptor/0003-ntoskrnl.exe-Add-FltBuildDefaultSecurityDescriptor-t.patch
      patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/inseng-Implementation/0001-inseng-Implement-CIF-reader-and-download-functions.patch
      patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/ntdll-RtlQueryPackageIdentity/0003-ntdll-tests-Add-basic-tests-for-RtlQueryPackageIdent.patch
      patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/packager-DllMain/0001-packager-Prefer-native-version.patch
      patch -Np1 < "$_where"/wine-tkg-patches/hotfixes/valve/staging-hotfixes/"$_proton_target"/wscript-support-d-u-switches/0001-wscript-return-TRUE-for-d-and-u-stub-switches.patch
    fi
}

if [[ "$_LOCAL_PRESET" = valve* ]]; then
  # Clear non-compatible mypatches
  rm -f "$_where"/{0002-futex_waitv,Shell32-CreateDirectoryInDestinationInFileOp-Move-multiop}.mypatch
fi
