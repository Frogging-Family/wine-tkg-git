From 6a1159fd49718165c61100ea70b0054d5a484ea6 Mon Sep 17 00:00:00 2001
From: Steven Noonan <steven@valvesoftware.com>
Date: Wed, 17 Oct 2018 04:13:37 -0700
Subject: [PATCH] ntdll/loader: add support for overriding
 IMAGE_FILE_LARGE_ADDRESS_AWARE

Signed-off-by: Steven Noonan <steven@valvesoftware.com>
---
 dlls/kernel32/heap.c           |  9 ++++++++-
 dlls/ntdll/ntdll.spec          |  1 +
 dlls/ntdll/unix/server.c       |  3 ++-
 dlls/ntdll/unix/unix_private.h |  2 ++
 dlls/ntdll/unix/virtual.c      | 13 +++++++++++++
 5 files changed, 26 insertions(+), 2 deletions(-)

diff --git a/dlls/kernel32/heap.c b/dlls/kernel32/heap.c
index b7bd6f5f91d..fef060e9c22 100644
--- a/dlls/kernel32/heap.c
+++ b/dlls/kernel32/heap.c
@@ -44,6 +44,8 @@ WINE_DEFAULT_DEBUG_CHANNEL(globalmem);
 
 static HANDLE systemHeap;   /* globally shared heap */
 
+extern BOOL CDECL __wine_needs_override_large_address_aware(void);
+
 
 /***********************************************************************
  *           HEAP_CreateSystemHeap
@@ -544,6 +546,10 @@ VOID WINAPI GlobalMemoryStatus( LPMEMORYSTATUS lpBuffer )
 #ifndef _WIN64
     IMAGE_NT_HEADERS *nt = RtlImageNtHeader( GetModuleHandleW(0) );
 #endif
+    static int force_large_address_aware = -1;
+
+    if (force_large_address_aware == -1)
+        force_large_address_aware = __wine_needs_override_large_address_aware();
 
     /* Because GlobalMemoryStatus is identical to GlobalMemoryStatusEX save
        for one extra field in the struct, and the lack of a bug, we simply
@@ -584,7 +590,8 @@ VOID WINAPI GlobalMemoryStatus( LPMEMORYSTATUS lpBuffer )
 
     /* values are limited to 2Gb unless the app has the IMAGE_FILE_LARGE_ADDRESS_AWARE flag */
     /* page file sizes are not limited (Adobe Illustrator 8 depends on this) */
-    if (!(nt->FileHeader.Characteristics & IMAGE_FILE_LARGE_ADDRESS_AWARE))
+    if (!(nt->FileHeader.Characteristics & IMAGE_FILE_LARGE_ADDRESS_AWARE) &&
+        !force_large_address_aware)
     {
         if (lpBuffer->dwTotalPhys > MAXLONG) lpBuffer->dwTotalPhys = MAXLONG;
         if (lpBuffer->dwAvailPhys > MAXLONG) lpBuffer->dwAvailPhys = MAXLONG;
diff --git a/dlls/ntdll/ntdll.spec b/dlls/ntdll/ntdll.spec
index ca427c46c04..10327373959 100644
--- a/dlls/ntdll/ntdll.spec
+++ b/dlls/ntdll/ntdll.spec
@@ -1625,6 +1625,9 @@
 @ cdecl -norelay __wine_dbg_output(str)
 @ cdecl -norelay __wine_dbg_strdup(str)

+# Virtual memory
+@ cdecl -syscall __wine_needs_override_large_address_aware()
+
 # Version
 @ cdecl wine_get_version()
 @ cdecl wine_get_build_id()
diff --git a/dlls/ntdll/unix/server.c b/dlls/ntdll/unix/server.c
index 7236f0acb83..e34abd88093 100644
--- a/dlls/ntdll/unix/server.c
+++ b/dlls/ntdll/unix/server.c
@@ -1471,8 +1471,8 @@ void server_init_process_done(void)
 #ifdef __APPLE__
     send_server_task_port();
 #endif
-    if (main_image_info.ImageCharacteristics & IMAGE_FILE_LARGE_ADDRESS_AWARE)
-        virtual_set_large_address_space();
+    if (main_image_info.ImageCharacteristics & IMAGE_FILE_LARGE_ADDRESS_AWARE
+            || __wine_needs_override_large_address_aware()) virtual_set_large_address_space();
 
     /* Install signal handlers; this cannot be done earlier, since we cannot
      * send exceptions to the debugger before the create process event that
diff --git a/dlls/ntdll/unix/unix_private.h b/dlls/ntdll/unix/unix_private.h
index c3ad0a41098..e0326f88a21 100644
--- a/dlls/ntdll/unix/unix_private.h
+++ b/dlls/ntdll/unix/unix_private.h
@@ -470,4 +470,6 @@ static inline int ntdll_wcsnicmp( const WCHAR *str1, const WCHAR *str2, int n )
 #define towupper(c)        ntdll_towupper(c)
 #define towlower(c)        ntdll_towlower(c)
 
+BOOL CDECL __wine_needs_override_large_address_aware(void);
+
 #endif /* __NTDLL_UNIX_PRIVATE_H */
diff --git a/dlls/ntdll/unix/virtual.c b/dlls/ntdll/unix/virtual.c
index 1337e2de861..200a777eb5c 100644
--- a/dlls/ntdll/unix/virtual.c
+++ b/dlls/ntdll/unix/virtual.c
@@ -3420,6 +3420,19 @@ void CDECL virtual_release_address_space(void)
     server_leave_uninterrupted_section( &virtual_mutex, &sigset );
 }
 
+BOOL CDECL __wine_needs_override_large_address_aware(void)
+{
+    static int needs_override = -1;
+
+    if (needs_override == -1)
+    {
+        const char *str = getenv( "WINE_LARGE_ADDRESS_AWARE" );
+
+        needs_override = !str || atoi(str) == 1;
+    }
+    return needs_override;
+}
+
 
 /***********************************************************************
  *           virtual_set_large_address_space
-- 
2.26.2

From 67150fb21e93e2a1d40047355de3c8c7ff2d73ca Mon Sep 17 00:00:00 2001
From: Tk-Glitch <ti3nou@gmail.com>
Date: Wed, 1 Sep 2021 15:58:29 +0200
Subject: Add LAA syscall to ntdll loader array following ea6308e364b669adfcb8b1e448c8b08d715bcf6d


diff --git a/dlls/ntdll/unix/loader.c b/dlls/ntdll/unix/loader.c
index 75266672f0b..428e13fea1f 100644
--- a/dlls/ntdll/unix/loader.c
+++ b/dlls/ntdll/unix/loader.c
@@ -358,6 +358,7 @@
     NtWriteFileGather,
     NtWriteVirtualMemory,
     NtYieldExecution,
+    __wine_needs_override_large_address_aware,
     wine_nt_to_unix_file_name,
     wine_unix_to_nt_file_name,
 };

From 86e5515c1abe1dbedf3d4554e7e6624e613c83e1 Mon Sep 17 00:00:00 2001
From: Torge Matthies <openglfreak@googlemail.com>
Date: Sat, 18 Feb 2023 23:18:53 +0100
Subject: [PATCH] Convert LAA syscall to a unix call

---
 dlls/ntdll/loader.c       | 9 +++++++++
 dlls/ntdll/ntdll.spec     | 2 +-
 dlls/ntdll/unix/loader.c  | 2 +-
 dlls/ntdll/unix/virtual.c | 5 +++++
 dlls/ntdll/unixlib.h      | 1 +
 5 files changed, 17 insertions(+), 2 deletions(-)

diff --git a/dlls/ntdll/loader.c b/dlls/ntdll/loader.c
index 133f6bacd89..6d1a078266f 100644
--- a/dlls/ntdll/loader.c
+++ b/dlls/ntdll/loader.c
@@ -3475,6 +3475,15 @@ NTSTATUS WINAPI __wine_unix_spawnvp( char * const argv[], int wait )
 }
 
 
+/***********************************************************************
+ *           __wine_needs_override_large_address_aware
+ */
+unsigned int CDECL __wine_needs_override_large_address_aware(void)
+{
+    return WINE_UNIX_CALL( unix_wine_needs_override_large_address_aware, NULL );
+}
+
+
 /***********************************************************************
  *           wine_server_call
  */
diff --git a/dlls/ntdll/ntdll.spec b/dlls/ntdll/ntdll.spec
index e07806f8b0b..5a1bfcee3d7 100644
--- a/dlls/ntdll/ntdll.spec
+++ b/dlls/ntdll/ntdll.spec
@@ -1714,7 +1714,7 @@
 @ cdecl -norelay __wine_dbg_strdup(str)
 
 # Virtual memory
-@ cdecl -syscall __wine_needs_override_large_address_aware()
+@ cdecl __wine_needs_override_large_address_aware()
 
 # Version
 @ cdecl wine_get_version()
diff --git a/dlls/ntdll/unix/loader.c b/dlls/ntdll/unix/loader.c
index ffa38448224..955cc8aec84 100644
--- a/dlls/ntdll/unix/loader.c
+++ b/dlls/ntdll/unix/loader.c
@@ -359,7 +359,6 @@ static void * const syscalls[] =
     NtWriteFileGather,
     NtWriteVirtualMemory,
     NtYieldExecution,
-    __wine_needs_override_large_address_aware,
     wine_nt_to_unix_file_name,
     wine_unix_to_nt_file_name,
 };
@@ -2104,6 +2103,7 @@ const unixlib_entry_t __wine_unix_call_funcs[] =
     load_so_dll,
     unwind_builtin_dll,
     unixcall_wine_dbg_write,
+    unixcall_wine_needs_override_large_address_aware,
     unixcall_wine_server_call,
     unixcall_wine_server_fd_to_handle,
     unixcall_wine_server_handle_to_fd,
diff --git a/dlls/ntdll/unix/unix_private.h b/dlls/ntdll/unix/unix_private.h
index 44336a43e8c..125e154f31e 100644
--- a/dlls/ntdll/unix/unix_private.h
+++ b/dlls/ntdll/unix/unix_private.h
@@ -322,6 +322,7 @@ extern void set_async_direct_result( HANDLE *async_handle, NTSTATUS status, ULON
 extern struct cpu_topology_override *get_cpu_topology_override(void) DECLSPEC_HIDDEN;
 
 extern NTSTATUS unixcall_wine_dbg_write( void *args ) DECLSPEC_HIDDEN;
+extern NTSTATUS unixcall_wine_needs_override_large_address_aware( void *args ) DECLSPEC_HIDDEN;
 extern NTSTATUS unixcall_wine_server_call( void *args ) DECLSPEC_HIDDEN;
 extern NTSTATUS unixcall_wine_server_fd_to_handle( void *args ) DECLSPEC_HIDDEN;
 extern NTSTATUS unixcall_wine_server_handle_to_fd( void *args ) DECLSPEC_HIDDEN;
diff --git a/dlls/ntdll/unix/virtual.c b/dlls/ntdll/unix/virtual.c
index 9fb1fc8c688..c10f2468d48 100644
--- a/dlls/ntdll/unix/virtual.c
+++ b/dlls/ntdll/unix/virtual.c
@@ -3508,6 +3508,11 @@ BOOL CDECL __wine_needs_override_large_address_aware(void)
     return needs_override;
 }
 
+NTSTATUS unixcall_wine_needs_override_large_address_aware( void *args )
+{
+    return __wine_needs_override_large_address_aware();
+}
+
 
 /***********************************************************************
  *           virtual_map_hypervisor_shared_data
diff --git a/dlls/ntdll/unixlib.h b/dlls/ntdll/unixlib.h
index 22e5663990d..522d9b99978 100644
--- a/dlls/ntdll/unixlib.h
+++ b/dlls/ntdll/unixlib.h
@@ -71,6 +71,7 @@ enum ntdll_unix_funcs
     unix_load_so_dll,
     unix_unwind_builtin_dll,
     unix_wine_dbg_write,
+    unix_wine_needs_override_large_address_aware,
     unix_wine_server_call,
     unix_wine_server_fd_to_handle,
     unix_wine_server_handle_to_fd,
-- 
2.39.2
