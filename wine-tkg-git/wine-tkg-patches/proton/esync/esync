#!/bin/bash

	# esync
	if [ "$_use_esync" = "true" ]; then
	  if ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 7f53ca70bad150af094e77f7dde582dc3f50ff34 HEAD ); then
	    _patchname='esync-unix-mainline.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor fd3de9005ef504a810aeb828c5b491a7bebd7888 HEAD ); then
	    _patchname='esync-unix-mainline-7f53ca7.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor c43b1ecbc3e8509b1f4778d799f9759eb64dda40 HEAD ); then
	    _patchname='esync-unix-mainline-fd3de90.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor c14de4c85e79563f5e859765d0015892ae925cd6 HEAD ); then
	    _patchname='esync-unix-mainline-c43b1ec.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor d5f23441ad460844f552d301680e061dd1a5e90a HEAD ); then
	    _patchname='esync-unix-mainline-c14de4c.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 9f0ae8c992f85f6b67ea484c83ad5c3b28f91a41 HEAD ); then
	    _patchname='esync-unix-mainline-d5f2344.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor af4378d46dbb72e682017485212442bf865c2226 HEAD ); then
	    _patchname='esync-unix-mainline-9f0ae8c.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor f076e5f85490a44fd34057df9af1c3ae3e7d5d3b HEAD ); then
	    _patchname='esync-unix-mainline-af4378d.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 9e945c8d1cf2287cfc5a9a2bf077e72c635fc7a4 HEAD ); then
	    _patchname='esync-unix-mainline-f076e5f.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 5b56bad50b85acb05244894990053f8b0de2e458 HEAD ); then
	    _patchname='esync-unix-mainline-9e945c8.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 751a3325a6ac93d11f08088c40b45a9ae05b52de HEAD ); then
	    _patchname='esync-unix-mainline-5b56bad.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor e3001b6a7c087da5a680b412d82da878e0149e8b HEAD ); then
	    _patchname='esync-unix-mainline-751a332.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 8d6c33c3bfca4f4ed7b7653fd0b82dfbc12bd3cb HEAD ); then
	    _patchname='esync-unix-mainline-e3001b6.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 6c8500d05eb23453be7185e4b87975fcb8b4bc09 HEAD ); then
	    _patchname='esync-unix-mainline-8d6c33c.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 6fdae1979bace3b2832fe099475e4368f543c13f HEAD ); then
	    _patchname='esync-unix-mainline-6c8500d.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor dd882794d2b226c59a306d1b39b9529ac431479c HEAD ); then
	    _patchname='esync-unix-mainline-6fdae19.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor a87bafc5b92c9f2deaa399e32a8ec42d28f7ea45 HEAD ); then
	    _patchname='esync-unix-mainline-dd88279.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 10ca57f4f56f86b433686afbdbe140ba54b239bb HEAD ); then
	    _patchname='esync-unix-mainline-a87bafc.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 3fb4d1f779770eab44d3f56fb9e95899b3791ca5 HEAD ); then
	    _patchname='esync-unix-mainline-10ca57f.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 2084fbd93dd607a6534eba7cab7dd60e0a12ca37 HEAD ); then
	    _patchname='esync-unix-mainline-3fb4d1f.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 6b277dc89d5532b83dc4116d7eba70e88d508fa0 HEAD ); then
	    _patchname='esync-unix-mainline-2084fbd.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 6a9e19344dae44e97361041996f237f4bfd905c6 HEAD ); then
	    _patchname='esync-unix-mainline-6b277dc.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 64cfcc1c62c2e1ca25ade05973675c64bbc3356e HEAD ); then
	    _patchname='esync-unix-mainline-6a9e193.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 731339cd60c255fd5890063b144ad7c00661f5a0 HEAD ); then
	    _patchname='esync-unix-mainline-64cfcc1.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 3c9b5379d1a57f69fa14f87f64f2079171becb6c HEAD ); then
	    _patchname='esync-unix-mainline-731339c.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 816b588e0438f94a3769612739abc9d8d9980537 HEAD ); then
	    _patchname='esync-unix-mainline-3c9b537.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor a0a62463e3d1d053459a194e2e1bcc91bfbec0f5 HEAD ); then
	    _patchname='esync-unix-mainline-816b588.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor d6ef9401b3ef05e87e0cadd31992a6809008331e HEAD ); then
	    _patchname='esync-unix-mainline-a0a6246.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor c6f2aacb5761801a17b930086111f4b2c4a30075 HEAD ); then
	    _patchname='esync-unix-mainline-d6ef940.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 44699c324f20690f9d6836919534ca1b5bcc3efe HEAD ); then
	    _patchname='esync-unix-mainline-c6f2aac.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 2b6426da6550c50787eeb2b39affcb766e07ec11 HEAD ); then
	    _patchname='esync-unix-mainline-44699c3.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor c1a042cefbc38eae6e0824a460a0657148e6745a HEAD ); then
	    _patchname='esync-unix-mainline-2b6426d.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 2a132a18390e848b90c0273e891cbeb6d140bc70 HEAD ); then
	    _patchname='esync-unix-mainline-c1a042c.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 2a132a18390e848b90c0273e891cbeb6d140bc70 HEAD ); then
	    _patchname='esync-unix-mainline-3100197.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor cf49617c1a378dd4a37ab7226187708c501b046f HEAD ); then
	    _patchname='esync-unix-mainline-2a132a1.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 459d37643ef72d284eec0dc50573eff59935ae69 HEAD ); then
	    _patchname='esync-unix-mainline-7bdc1d6.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 0c249e6125fc9dc6ee86b4ef6ae0d9fa2fc6291b HEAD ); then
	    _patchname='esync-unix-mainline-459d376.patch' && _patchmsg="Using Esync (unix, mainline) patchset" && nonuser_patcher
	  elif git merge-base --is-ancestor 2600ecd4edfdb71097105c74312f83845305a4f2 HEAD; then # Esync ce79346
	    if [ "$_use_staging" = "true" ]; then
	      # fixes for esync patches to apply to staging
	      cd "${srcdir}"/"${_esyncsrcdir}"
	      _patchname='esync-staging-fixes-r3.patch' && _patchmsg="Using esync staging 3.20+ compat fixes" && nonuser_patcher
	      cd "${srcdir}"/"${_winesrcdir}"
	    fi

	    cd "${srcdir}"/"${_esyncsrcdir}"
	    _patchname='esync-compat-fixes-r3.patch' && _patchmsg="Using esync 3.20+ compat fixes" && nonuser_patcher
	    cd "${srcdir}"/"${_winesrcdir}"

	    # if using a wine version that includes 7ba361b, apply 4.4+ additional fixes
	    if git merge-base --is-ancestor 7ba361b47bc95df624eac83c170d6c1a4041d8f8 HEAD; then # ntdll: Add support for returning previous state argument in event functions
	      cd "${srcdir}"/"${_esyncsrcdir}"
	      _patchname='esync-compat-fixes-r3.1.patch' && _patchmsg="Using esync 4.4+ additional compat fixes" && nonuser_patcher
	      cd "${srcdir}"/"${_winesrcdir}"
	    fi

	    # if using a wine version that includes b2a546c, apply 4.5+ additional fixes
	    if git merge-base --is-ancestor b2a546c92dabee8ab1c3d5b9fecc84d99caf0e76 HEAD; then # server: Introduce kernel_object struct for generic association between server and kernel objects.
	      cd "${srcdir}"/"${_esyncsrcdir}"
	      _patchname='esync-compat-fixes-r3.2.patch' && _patchmsg="Using esync 4.5+ additional compat fixes" && nonuser_patcher
	      cd "${srcdir}"/"${_winesrcdir}"
	    fi

	    # if using a wine version that includes b3c8d5d, apply 4.6+ additional fixes
	    if git merge-base --is-ancestor b3c8d5d36850e484b5cc84ab818a75db567a06a3 HEAD; then # ntdll: Use static debug info before initialization is done.
	      cd "${srcdir}"/"${_esyncsrcdir}"
	      _patchname='esync-compat-fixes-r3.3.patch' && _patchmsg="Using esync 4.6+(b3c8d5d) additional compat fixes" && nonuser_patcher
	      cd "${srcdir}"/"${_winesrcdir}"
	    fi

	    # if using a wine version that includes 4c0e817, apply 4.6+ additional fixes
	    if git merge-base --is-ancestor 4c0e81728f6db575d9cbd8feb8a5374f1adec9bb HEAD; then # ntdll: Use static debug info before initialization is done.
	      cd "${srcdir}"/"${_esyncsrcdir}"
	      _patchname='esync-compat-fixes-r3.4.patch' && _patchmsg="Using esync 4.6+(4c0e817) additional compat fixes" && nonuser_patcher
	      cd "${srcdir}"/"${_winesrcdir}"
	    fi

	    # if using a wine version that includes f534fbd, apply 4.6+ additional fixes
	    if git merge-base --is-ancestor f534fbd3e3c83df49c7c6b8e608a99f2af65adc0 HEAD; then # server: Allow creating process kernel objects.
	      cd "${srcdir}"/"${_esyncsrcdir}"
	      _patchname='esync-compat-fixes-r3.5.patch' && _patchmsg="Using esync 4.6+(f534fbd) additional compat fixes" && nonuser_patcher
	      cd "${srcdir}"/"${_winesrcdir}"
	    fi

	    # if using a wine version that includes 29914d5, apply 4.8+ additional fixes
	    if git merge-base --is-ancestor 29914d583fe098521472332687b8da69fc692690 HEAD; then # server: Pass file object handle in IRP_CALL_CREATE request.
	      cd "${srcdir}"/"${_esyncsrcdir}"
	      _patchname='esync-compat-fixes-r3.6.patch' && _patchmsg="Using esync 4.8+(29914d5) additional compat fixes" && nonuser_patcher
	      cd "${srcdir}"/"${_winesrcdir}"
	    fi

	    # if using a wine version that includes 608d086, apply 4.20+ additional fixes
	    if git merge-base --is-ancestor 608d086f1b1bb7168e9322c65224c23f34e75f29 HEAD; then
	      cd "${srcdir}"/"${_esyncsrcdir}"
	      _patchname='esync-compat-fixes-r3.7.patch' && _patchmsg="Using esync 4.20+(608d086) additional compat fixes" && nonuser_patcher
	      cd "${srcdir}"/"${_winesrcdir}"
	    fi

	    # if using a wine version that includes 4538a13, apply 4.20+ additional fixes
	    if git merge-base --is-ancestor 4538a137e089240f1981f0d6f82fb8d63a65f4f6 HEAD; then
	      cd "${srcdir}"/"${_esyncsrcdir}"
	      _patchname='esync-compat-fixes-r3.8.patch' && _patchmsg="Using esync 4.20+(4538a13) additional compat fixes" && nonuser_patcher
	      cd "${srcdir}"/"${_winesrcdir}"
	    fi

	    # if using a wine version that includes b934f66, apply 4.21+ additional fixes
	    if git merge-base --is-ancestor b934f6626ed7cb8a6cc18b261550d363a0068141 HEAD; then
	      cd "${srcdir}"/"${_esyncsrcdir}"
	      _patchname='esync-compat-fixes-r3.9.patch' && _patchmsg="Using esync 4.21+(b934f66) additional compat fixes" && nonuser_patcher
	      cd "${srcdir}"/"${_winesrcdir}"
	    fi

	    # if using a wine version that includes fc17535, apply 4.21+ additional fixes
	    if git merge-base --is-ancestor fc17535eb98a4b200d6a418337a7e280568c7cfd HEAD; then
	      cd "${srcdir}"/"${_esyncsrcdir}"
	      _patchname='esync-compat-fixes-r3.10.patch' && _patchmsg="Using esync 4.21+(fc17535) additional compat fixes" && nonuser_patcher
	      cd "${srcdir}"/"${_winesrcdir}"
	    fi

	    # if using a wine version that includes b664ae8, apply 5.5+ additional fixes
	    if git merge-base --is-ancestor b664ae8e60e08224cdc3025c28a37cb22356aaa4 HEAD; then
	      cd "${srcdir}"/"${_esyncsrcdir}"
	      _patchname='esync-compat-fixes-r3.11.patch' && _patchmsg="Using esync 5.5+(b664ae8) additional compat fixes" && nonuser_patcher
	      cd "${srcdir}"/"${_winesrcdir}"
	    fi

	    # if using a wine version that includes 8701260, apply 5.6+ additional fixes
	    if git merge-base --is-ancestor 87012607688f730755ee91de14620e6e3b78395c HEAD; then
	      cd "${srcdir}"/"${_esyncsrcdir}"
	      _patchname='esync-compat-fixes-r3.12.patch' && _patchmsg="Using esync 5.6+(8701260) additional compat fixes" && nonuser_patcher
	      cd "${srcdir}"/"${_winesrcdir}"
	    fi

	    # if using a wine version that includes 40e849f, apply 5.7+ additional fixes
	    if git merge-base --is-ancestor 40e849ffa46ae3cd060e2db83305dda1c4d2648e HEAD; then
	      cd "${srcdir}"/"${_esyncsrcdir}"
	      _patchname='esync-compat-fixes-r3.13.patch' && _patchmsg="Using esync 5.7+(40e849f) additional compat fixes" && nonuser_patcher
	      cd "${srcdir}"/"${_winesrcdir}"
	    fi

	    # if using a wine version that includes e5030a4, apply 5.8+ additional fixes
	    if git merge-base --is-ancestor e5030a4ac0a303d6788ae79ffdcd88e66cf78bd2 HEAD; then
	      cd "${srcdir}"/"${_esyncsrcdir}"
	      _patchname='esync-compat-fixes-r3.14.patch' && _patchmsg="Using esync 5.8+(e5030a4) additional compat fixes" && nonuser_patcher
	      cd "${srcdir}"/"${_winesrcdir}"
	    fi

	    # if using a wine version that includes 2633a5c, apply 5.8+ additional fixes
	    if git merge-base --is-ancestor 2633a5c1ae542f08f127ba737fa59fb03ed6180b HEAD; then
	      cd "${srcdir}"/"${_esyncsrcdir}"
	      _patchname='esync-compat-fixes-r3.15.patch' && _patchmsg="Using esync 5.8+(2633a5c) additional compat fixes" && nonuser_patcher
	      cd "${srcdir}"/"${_winesrcdir}"
	    fi

	    # if using a wine version that includes a1c46c3, apply 5.9+ additional fixes
	    if git merge-base --is-ancestor a1c46c3806a054c16fab9fd9d8388e55eb473536 HEAD; then
	      cd "${srcdir}"/"${_esyncsrcdir}"
	      _patchname='esync-compat-fixes-r3.16.patch' && _patchmsg="Using esync 5.9+(a1c46c3) additional compat fixes" && nonuser_patcher
	      cd "${srcdir}"/"${_winesrcdir}"
	    fi
	  # if using a wine version that includes aec7bef, use 3.17+ fixes
	  elif git merge-base --is-ancestor aec7befb5115d866724149bbc5576c7259fef820 HEAD; then # server: Avoid potential size overflow for empty object attributes
	    if [ "$_use_staging" = "true" ]; then
	      # fixes for esync patches to apply to staging
	      cd "${srcdir}"/"${_esyncsrcdir}"
	      _patchname='esync-staging-fixes-r2.patch' && _patchmsg="Using esync staging 3.17+ compat fixes" && nonuser_patcher
	      cd "${srcdir}"/"${_winesrcdir}"
	    # if using a wine version that includes c099655, use 3.19+ addon fixes
	    elif git merge-base --is-ancestor c0996553a1d9056e1b89871fc8c3fb0bfb5a4f0c HEAD; then #  server: Support FILE_SKIP_COMPLETION_PORT_ON_SUCCESS on server-side asyncs
	      cd "${srcdir}"/"${_esyncsrcdir}"
	      _patchname='esync-compat-fixes-r2.1.patch' && _patchmsg="Using esync 3.19+ compat addon fixes" && nonuser_patcher
	      cd "${srcdir}"/"${_winesrcdir}"
	    fi

	    cd "${srcdir}"/"${_esyncsrcdir}"
	    _patchname='esync-compat-fixes-r2.patch' && _patchmsg="Using esync 3.17+ compat fixes" && nonuser_patcher
	    cd "${srcdir}"/"${_winesrcdir}"
	  else
	    # 3.10 - 3.16
	    if [ "$_use_staging" = "true" ]; then
	      cd "${srcdir}"/"${_esyncsrcdir}"
	      _patchname='esync-staging-fixes-r1.patch' && _patchmsg="Using esync staging 3.16- compat fixes" && nonuser_patcher
	      cd "${srcdir}"/"${_winesrcdir}"
	    fi

	    cd "${srcdir}"/"${_esyncsrcdir}"
	    _patchname='esync-compat-fixes-r1.patch' && _patchmsg="Using esync 3.16- compat fixes" && nonuser_patcher
	    cd "${srcdir}"/"${_winesrcdir}"

	    # if using a wine version that includes 57212f6, apply 3.14+ additional fixes
	    if git merge-base --is-ancestor 57212f64f8e4fef0c63c633940e13d407c0f2069 HEAD; then # kernel32: Add AttachConsole implementation
	      cd "${srcdir}"/"${_esyncsrcdir}"
	      _patchname='esync-compat-fixes-r1.1.patch' && _patchmsg="Using esync 3.14+ additional compat fixes" && nonuser_patcher
	      cd "${srcdir}"/"${_winesrcdir}"
	    fi
	  fi

	  # apply esync patches
	  if ( cd "${srcdir}"/"${_winesrcdir}" && ! git merge-base --is-ancestor 0c249e6125fc9dc6ee86b4ef6ae0d9fa2fc6291b HEAD ); then
	    echo -e "\nEsync-mainline" >> "$_where"/prepare.log
	    msg2 "Applying Esync patchset"
	    for _f in "${srcdir}"/"${_esyncsrcdir}"/*.patch; do
	      #msg2 "Applying ${_f}"
	      echo -e "\nApplying ${_f}" >> "$_where"/prepare.log
	      git apply -C1 --verbose < "${_f}" >> "$_where"/prepare.log 2>&1
	    done
	  fi

	  if git merge-base --is-ancestor b2a546c92dabee8ab1c3d5b9fecc84d99caf0e76 HEAD && ( cd "${srcdir}"/"${_winesrcdir}" && ! git merge-base --is-ancestor 0c249e6125fc9dc6ee86b4ef6ae0d9fa2fc6291b HEAD ); then #  server: Introduce kernel_object struct for generic association between server and kernel objects.
	    _patchname='esync-no_kernel_obj_list.patch' && _patchmsg="Add no_kernel_obj_list object method to esync. (4.5+)" && nonuser_patcher
	  fi

	  # Fix for server-Desktop_Refcount and patchsets depending on it (ws2_32-WSACleanup, ws2_32-TransmitFile, server-Pipe_ObjectName)
	  if [ "$_use_staging" = "true" ]; then
	    if ! git merge-base --is-ancestor b2a546c92dabee8ab1c3d5b9fecc84d99caf0e76 HEAD; then #  server: Introduce kernel_object struct for generic association between server and kernel objects.
	      _patchname='esync-no_alloc_handle.patch' && _patchmsg="Using esync-no_alloc_handle patch to fix server-Desktop_Refcount ws2_32-WSACleanup ws2_32-TransmitFile server-Pipe_ObjectName with Esync enabled" && nonuser_patcher
	    fi
	  fi
	fi
	# /esync
