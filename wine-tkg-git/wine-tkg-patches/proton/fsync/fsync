#!/bin/bash

	if [ "$_use_fsync" = "true" ]; then
	  # fsync-unix - requares 5.20+ Wine version
	  if ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 0c249e6125fc9dc6ee86b4ef6ae0d9fa2fc6291b HEAD ); then
	    if [ "$_staging_esync" = "true" ]; then
	      if ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 7f53ca70bad150af094e77f7dde582dc3f50ff34 HEAD ); then
	        _patchname='fsync-unix-staging.patch' && _patchmsg="Applied fsync patches (unix, staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor fd3de9005ef504a810aeb828c5b491a7bebd7888 HEAD ); then
	        _patchname='fsync-unix-staging-7f53ca7.patch' && _patchmsg="Applied fsync patches (unix, staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 37e7038c5c314527dc242cdbe5e8a70000fdfe98 HEAD ); then
	        _patchname='fsync-unix-staging-fd3de90.patch' && _patchmsg="Applied fsync patches (unix, staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor c14de4c85e79563f5e859765d0015892ae925cd6 HEAD ); then
	        _patchname='fsync-unix-staging-37e7038.patch' && _patchmsg="Applied fsync patches (unix, staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor d5f23441ad460844f552d301680e061dd1a5e90a HEAD ); then
	        _patchname='fsync-unix-staging-c14de4c.patch' && _patchmsg="Applied fsync patches (unix, staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor af4378d46dbb72e682017485212442bf865c2226 HEAD ); then
	        _patchname='fsync-unix-staging-d5f2344.patch' && _patchmsg="Applied fsync patches (unix, staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 5b56bad50b85acb05244894990053f8b0de2e458 HEAD ); then
	        _patchname='fsync-unix-staging-af4378d.patch' && _patchmsg="Applied fsync patches (unix, staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor e3001b6a7c087da5a680b412d82da878e0149e8b HEAD ); then
	        _patchname='fsync-unix-staging-5b56bad.patch' && _patchmsg="Applied fsync patches (unix, staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 8d6c33c3bfca4f4ed7b7653fd0b82dfbc12bd3cb HEAD ); then
	        _patchname='fsync-unix-staging-e3001b6.patch' && _patchmsg="Applied fsync patches (unix, staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 10ca57f4f56f86b433686afbdbe140ba54b239bb HEAD ); then
	        _patchname='fsync-unix-staging-8d6c33c.patch' && _patchmsg="Applied fsync patches (unix, staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 626870abe2e800cc9407d05d5c00500a4ad97b3a HEAD ); then
	        _patchname='fsync-unix-staging-10ca57f.patch' && _patchmsg="Applied fsync patches (unix, staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 731339cd60c255fd5890063b144ad7c00661f5a0 HEAD ); then
	        _patchname='fsync-unix-staging-626870a.patch' && _patchmsg="Applied fsync patches (unix, staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor d6ef9401b3ef05e87e0cadd31992a6809008331e HEAD ); then
	        _patchname='fsync-unix-staging-731339c.patch' && _patchmsg="Applied fsync patches (unix, staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor c6f2aacb5761801a17b930086111f4b2c4a30075 HEAD ); then
	        _patchname='fsync-unix-staging-d6ef940.patch' && _patchmsg="Applied fsync patches (unix, staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 44699c324f20690f9d6836919534ca1b5bcc3efe HEAD ); then
	        _patchname='fsync-unix-staging-c6f2aac.patch' && _patchmsg="Applied fsync patches (unix, staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 2b6426da6550c50787eeb2b39affcb766e07ec11 HEAD ); then
	        _patchname='fsync-unix-staging-44699c3.patch' && _patchmsg="Applied fsync patches (unix, staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor c1a042cefbc38eae6e0824a460a0657148e6745a HEAD ); then
	        _patchname='fsync-unix-staging-2b6426d.patch' && _patchmsg="Applied fsync patches (unix, staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_stgsrcdir}" && git merge-base --is-ancestor dc77e28b0f7d6fdb11dafacb73b9889545359572 HEAD ); then
	        _patchname='fsync-unix-staging-c1a042c.patch' && _patchmsg="Applied fsync patches (unix, staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_stgsrcdir}" && git merge-base --is-ancestor 7bdc1d6bacaba02b914ca3b66ee239103201617d HEAD ); then
	        _patchname='fsync-unix-staging-3100197.patch' && _patchmsg="Applied fsync patches (unix, staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 459d37643ef72d284eec0dc50573eff59935ae69 HEAD ); then
	        _patchname='fsync-unix-staging-7bdc1d6.patch' && _patchmsg="Applied fsync patches (unix, staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 0c249e6125fc9dc6ee86b4ef6ae0d9fa2fc6291b HEAD ); then
	        _patchname='fsync-unix-staging-459d376.patch' && _patchmsg="Applied fsync patches (unix, staging)" && nonuser_patcher
	      fi
	      if [ "$_protonify" = "true" ] && ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor c6f2aacb5761801a17b930086111f4b2c4a30075 HEAD ); then
	        if ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor d6ef9401b3ef05e87e0cadd31992a6809008331e HEAD ); then
	          _patchname='server_Abort_waiting_on_a_completion_port_when_closing_it.patch' && _patchmsg="Added Abort waiting on a completion port when closing it Proton patch" && nonuser_patcher
	        else
	          _patchname='server_Abort_waiting_on_a_completion_port_when_closing_it-d6ef940.patch' && _patchmsg="Added Abort waiting on a completion port when closing it Proton patch" && nonuser_patcher
	        fi
	      fi
	    elif [ "$_use_esync" = "true" ]; then
	      if ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor c14de4c85e79563f5e859765d0015892ae925cd6 HEAD ); then
	        _patchname='fsync-unix-mainline.patch' && _patchmsg="Applied fsync patches (unix, mainline)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor d5f23441ad460844f552d301680e061dd1a5e90a HEAD ); then
	        _patchname='fsync-unix-mainline-c14de4c.patch' && _patchmsg="Applied fsync patches (unix, mainline)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor af4378d46dbb72e682017485212442bf865c2226 HEAD ); then
	        _patchname='fsync-unix-mainline-d5f2344.patch' && _patchmsg="Applied fsync patches (unix, mainline)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 5b56bad50b85acb05244894990053f8b0de2e458 HEAD ); then
	        _patchname='fsync-unix-mainline-af4378d.patch' && _patchmsg="Applied fsync patches (unix, mainline)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor e3001b6a7c087da5a680b412d82da878e0149e8b HEAD ); then
	        _patchname='fsync-unix-mainline-5b56bad.patch' && _patchmsg="Applied fsync patches (unix, mainline)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 8d6c33c3bfca4f4ed7b7653fd0b82dfbc12bd3cb HEAD ); then
	        _patchname='fsync-unix-mainline-e3001b6.patch' && _patchmsg="Applied fsync patches (unix, mainline)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 10ca57f4f56f86b433686afbdbe140ba54b239bb HEAD ); then
	        _patchname='fsync-unix-mainline-8d6c33c.patch' && _patchmsg="Applied fsync patches (unix, mainline)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 731339cd60c255fd5890063b144ad7c00661f5a0 HEAD ); then
	        _patchname='fsync-unix-mainline-10ca57f.patch' && _patchmsg="Applied fsync patches (unix, mainline)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor d6ef9401b3ef05e87e0cadd31992a6809008331e HEAD ); then
	        _patchname='fsync-unix-mainline-731339c.patch' && _patchmsg="Applied fsync patches (unix, mainline)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor c6f2aacb5761801a17b930086111f4b2c4a30075 HEAD ); then
	        _patchname='fsync-unix-mainline-d6ef940.patch' && _patchmsg="Applied fsync patches (unix, mainline)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 44699c324f20690f9d6836919534ca1b5bcc3efe HEAD ); then
	        _patchname='fsync-unix-mainline-c6f2aac.patch' && _patchmsg="Applied fsync patches (unix, mainline)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 2b6426da6550c50787eeb2b39affcb766e07ec11 HEAD ); then
	        _patchname='fsync-unix-mainline-44699c3.patch' && _patchmsg="Applied fsync patches (unix, mainline)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor c1a042cefbc38eae6e0824a460a0657148e6745a HEAD ); then
	        _patchname='fsync-unix-mainline-2b6426d.patch' && _patchmsg="Applied fsync patches (unix, mainline)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 310019789f7bde12ae3f25f723957c975fb2f804 HEAD ); then
	        _patchname='fsync-unix-mainline-c1a042c.patch' && _patchmsg="Applied fsync patches (unix, mainline)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor cf49617c1a378dd4a37ab7226187708c501b046f HEAD ); then
	        _patchname='fsync-unix-mainline-3100197.patch' && _patchmsg="Applied fsync patches (unix, mainline)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 459d37643ef72d284eec0dc50573eff59935ae69 HEAD ); then
	        _patchname='fsync-unix-mainline-7bdc1d6.patch' && _patchmsg="Applied fsync patches (unix, mainline)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 0c249e6125fc9dc6ee86b4ef6ae0d9fa2fc6291b HEAD ); then
	        _patchname='fsync-unix-mainline-459d376.patch' && _patchmsg="Applied fsync patches (unix, mainline)" && nonuser_patcher
	      fi
	    else
	      echo "Fsync forcefully disabled due to incompatible tree" >> "$_where"/last_build_config.log
	    fi
	    # choosing between futex_waitv, fsync legacy and futex2
	    if [ "$_staging_esync" = "true" ] || [ "$_use_esync" = "true" ]; then
	      if [ "$_fsync_legacy" = "true" ]; then
	        if [ "$_fsync_futex2" = "true" ]; then
	          _patchname='fsync_futex2.patch' && _patchmsg="Add futex2 support to fsync (DEPRECATED)" && nonuser_patcher
	        else
	          echo "Keep Fsync legacy version in this build" >> "$_where"/last_build_config.log
	        fi
	      else
	        if ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor bae3769ef9db585e765ff0cf62bca1533c4d1cc0 HEAD ); then
	          _patchname='fsync_futex_waitv.patch' && _patchmsg="Applied patches for fsync to support futex_waitv" && nonuser_patcher
	        elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 59485f00c917061c097c1805d7fa7f61c380c749 HEAD ); then
	          _patchname='fsync_futex_waitv-bae3769.patch' && _patchmsg="Applied patches for fsync to support futex_waitv" && nonuser_patcher
	        elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor d5f23441ad460844f552d301680e061dd1a5e90a HEAD ); then
	          _patchname='fsync_futex_waitv-59485f0.patch' && _patchmsg="Applied patches for fsync to support futex_waitv" && nonuser_patcher
	        elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 69910d38511ed69804fdb327bed4296bc1829276 HEAD ); then
	          _patchname='fsync_futex_waitv-d5f2344.patch' && _patchmsg="Applied patches for fsync to support futex_waitv" && nonuser_patcher
	        elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 5b56bad50b85acb05244894990053f8b0de2e458 HEAD ); then
	          _patchname='fsync_futex_waitv-69910d3.patch' && _patchmsg="Applied patches for fsync to support futex_waitv" && nonuser_patcher
	        elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 0c249e6125fc9dc6ee86b4ef6ae0d9fa2fc6291b HEAD ); then
	          _patchname='fsync_futex_waitv-5b56bad.patch' && _patchmsg="Applied patches for fsync to support futex_waitv" && nonuser_patcher
	        fi
	      fi
	    fi
	  # fsync legacy only - before 5.20
	  elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 29914d583fe098521472332687b8da69fc692690 HEAD ); then
	    if [ "$_staging_esync" = "true" ]; then
	      if ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 27a52d0414b68eb9d74c058afc4775b43f151263 HEAD ); then
	        _patchname='fsync-staging.patch' && _patchmsg="Applied fsync legacy patches (staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 2633a5c1ae542f08f127ba737fa59fb03ed6180b HEAD ); then
	        _patchname='fsync-staging-27a52d0.patch' && _patchmsg="Applied fsync legacy patches (staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor e5030a4ac0a303d6788ae79ffdcd88e66cf78bd2 HEAD ); then
	        _patchname='fsync-staging-2633a5c.patch' && _patchmsg="Applied fsync legacy patches (staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 40e849ffa46ae3cd060e2db83305dda1c4d2648e HEAD ); then
	        _patchname='fsync-staging-e5030a4.patch' && _patchmsg="Applied fsync legacy patches (staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 87012607688f730755ee91de14620e6e3b78395c HEAD ); then
	        _patchname='fsync-staging-40e849f.patch' && _patchmsg="Applied fsync legacy patches (staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor fc17535eb98a4b200d6a418337a7e280568c7cfd HEAD ); then
	        _patchname='fsync-staging-8701260.patch' && _patchmsg="Applied fsync legacy patches (staging)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 608d086f1b1bb7168e9322c65224c23f34e75f29 HEAD ); then
	        _patchname='fsync-staging-fc17535.patch' && _patchmsg="Applied fsync legacy patches (staging <fc17535)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_stgsrcdir}" && git merge-base --is-ancestor cf04b8d6ac710c83dc9a433aea3e5d3c451095a1 HEAD ); then
	        _patchname='fsync-staging-608d086.patch' && _patchmsg="Applied fsync legacy patches (staging <608d086)" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 1d9a3f6d12322891a2af4aadd66a92ea66479233 HEAD ); then
	        _patchname='fsync-staging-cf04b8d.patch' && _patchmsg="Applied fsync legacy patches (staging <cf04b8d)" && nonuser_patcher
	      fi
	      if [[ ! ${_staging_args[*]} =~ "server-Desktop_Refcount" ]] && ( cd "${srcdir}"/"${_stgsrcdir}" && ! git merge-base --is-ancestor 7fc716aa5f8595e5bca9206f86859f1ac70894ad HEAD ); then
	        _patchname='fsync-staging-no_alloc_handle.patch' && _patchmsg="Added no_alloc_handle object method to fsync" && nonuser_patcher
	        if ([ "$_EXTERNAL_INSTALL" = "proton" ]) || [ "$_protonify" = "true" ] && ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 2633a5c1ae542f08f127ba737fa59fb03ed6180b HEAD ); then
	          _patchname='server_Abort_waiting_on_a_completion_port_when_closing_it-no_alloc_handle-c6f2aac.patch' && _patchmsg="Added Abort waiting on a completion port when closing it Proton patch (no_alloc_handle edition)" && nonuser_patcher
	        fi
	      elif [ "$_protonify" = "true" ] &&  ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 2633a5c1ae542f08f127ba737fa59fb03ed6180b HEAD ); then
	        _patchname='server_Abort_waiting_on_a_completion_port_when_closing_it-c6f2aac.patch' && _patchmsg="Added Abort waiting on a completion port when closing it Proton patch" && nonuser_patcher
	      fi
	    elif [ "$_use_esync" = "true" ]; then
	      if ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 2633a5c1ae542f08f127ba737fa59fb03ed6180b HEAD ); then
	        _patchname='fsync-mainline.patch' && _patchmsg="Applied fsync legacy patches" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor e5030a4ac0a303d6788ae79ffdcd88e66cf78bd2 HEAD ); then
	        _patchname='fsync-mainline-2633a5c.patch' && _patchmsg="Applied fsync legacy patches" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 40e849ffa46ae3cd060e2db83305dda1c4d2648e HEAD ); then
	        _patchname='fsync-mainline-e5030a4.patch' && _patchmsg="Applied fsync legacy patches" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 87012607688f730755ee91de14620e6e3b78395c HEAD ); then
	        _patchname='fsync-mainline-40e849f.patch' && _patchmsg="Applied fsync legacy patches" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor fc17535eb98a4b200d6a418337a7e280568c7cfd HEAD ); then
	        _patchname='fsync-mainline-8701260.patch' && _patchmsg="Applied fsync legacy patches" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 608d086f1b1bb7168e9322c65224c23f34e75f29 HEAD ); then
	        _patchname='fsync-mainline-fc17535.patch' && _patchmsg="Applied fsync legacy patches" && nonuser_patcher
	      elif ( cd "${srcdir}"/"${_winesrcdir}" && git merge-base --is-ancestor 29914d583fe098521472332687b8da69fc692690 HEAD ); then
	        _patchname='fsync-mainline-608d086.patch' && _patchmsg="Applied fsync legacy patches" && nonuser_patcher
	      fi
	    else
	      echo "Fsync forcefully disabled due to incompatible tree" >> "$_where"/last_build_config.log
	    fi
	    if [ "$_fsync_spincounts" = "true" ] && [ "$_use_staging" = "true" ] && ( cd "${srcdir}"/"${_stgsrcdir}" && git merge-base --is-ancestor 8b2fd051c97187c68dee2ba2f0df7aca65c4cca6 HEAD ) && ( cd "${srcdir}"/"${_winesrcdir}" && ! git merge-base --is-ancestor 0c249e6125fc9dc6ee86b4ef6ae0d9fa2fc6291b HEAD ); then # Temporarily only allow on staging - we depend on esync mutexes abandonment
	      _patchname='fsync-spincounts.patch' && _patchmsg="Add a configurable spin count to fsync" && nonuser_patcher
	    fi
	  fi
	fi
