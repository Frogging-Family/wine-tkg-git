# 'Wine-to-rule-them-all' - Wine-TkG simple config file

##
##   This config file contains the basic settings of your build.
##   For deeper configuration, see wine-tkg-profiles/advanced-customization.cfg
##

#### NON-MAKEPKG OPTIONS (Won't affect makepkg builds) ####

# Set to the desired installation path for your build(s). A versioned dir containing your build will be created inside that target.
# Example: _nomakepkg_prefix_path="/home/frog" will install your build in /home/frog/wine-tkg-********
_nomakepkg_prefix_path=""

# Set to true to get a prompt after the 64-bit part is built, enabling package switching before building the 32-bit side.
# This is a workaround for distros shipping broken devel packages that can't coexist as multilib
_nomakepkg_midbuild_prompt="false"

# Enable dependency autoresolver for non-makepkg builds - Set to true to automatically install missing dependencies for your distro.
# This will autodetect your OS and install the required dependencies for building wine-tkg using the appropriate package manager.
# The autoresolver will also attempt to use the best available privileged escalation method for your system (sudo, doas, etc.)
_nomakepkg_dependency_autoresolver="true"


#### EXTERNAL INSTALLATION SETTINGS - !! ONLY AFFECTS MAKEPKG !! ####

# Set to true to install into external path instead of /usr. This allows you to install multiple different versions in parallel.
# !!! Don't forget that you'll have to use /opt/wine-something/bin/wine instead of just wine (same for winecfg etc.) !!!
_EXTERNAL_INSTALL="false"

#### GENERATE DEBIAN PACKAGE ####
# Set to true if you want to generate a debian package after building. Currently doesn't work with _EXTERNAL_INSTALL option.
# This generates a debian package from build files ready to be packaged.
_GENERATE_DEBIAN_PACKAGE="false"

#### WINE FLAVOUR SETTINGS ####

# Override config with one of the presets from /wine-tkg-profiles dir - Leave empty to get a prompt (legacy profiles won't be listed)
# Set to "none" to silence the prompt
# Custom presets : "fo4", "legacy", "mwo", "sims2", "oldnvidia-sims3", "protonified", "unity".
# Valve presets :  "valve" (builds against current valve proton tree), "valve-exp" (builds against current valve proton-experimental tree), "valve-exp-bleeding" (builds against current valve proton-experimental-bleeding-edge tree)
# Clean presets (untouched) : "mainline", "staging".
_LOCAL_PRESET=""

# Add GloriousEggroll game patches and hotfixes when using a Valve profile with staging enabled
# ! This will only affect Valve + staging trees !
# List of patches applied with this option enabled: assettocorsa-hud killer-instinct-winevulkan_fix FFVII-and-SpecialK-powerprof 65-proton-fake_current_res_patches unity_crash_hotfix Fix-regression-introduced-by-0e7fd41 15aa8c6-fix-star-citizen-bug-52956 0001-winex11.drv-Define-ControlMask-when-not-available 0002-include-Add-THREAD_POWER_THROTTLING_STATE-type 0003-ntdll-Fake-success-for-ThreadPowerThrottlingState
_use_GE_patches="true"

# plain wine commit or version tag if you want to use a specific wine version. Can use e.g. "64d9f30", "wine-3.16" or "wine-4.0"
# !!! Only affects non-staging builds (you want to edit the staging_version below for staging builds) !!!
# Leave empty to use latest master - https://github.com/wine-mirror/wine/commits/master
_plain_version=""

# staging
_use_staging="true"
# staging commit or version tag if you want to use a specific staging version. Can use e.g. "7cfceb7", "v3.16" or "v4.0"
# Leave empty to use latest master - https://github.com/wine-staging/wine-staging/commits/master
_staging_version=""

# NTsync - Disable with WINE_DISABLE_FAST_SYNC=1 envvar - Set to true to enable NTsync support - https://repo.or.cz/wine/zf.git/shortlog/refs/heads/fastsync4
# more info about NTsync and feedback topic - https://github.com/Frogging-Family/wine-tkg-git/issues/936
# !! For building and using requires special linux-tkg build with winesync module and header (or https://aur.archlinux.org/packages/winesync-dkms/) !!
# !! Not compatible with Valve trees and some other patches. On Staging depends on fsync patches !!
# !! For plain Wine required disabling esync and fsync patches applying !!
_use_fastsync="false"

# NTsync5 - https://repo.or.cz/wine/zf.git/shortlog/refs/heads/ntsync5
# !! For building and using requires ntsync module and headers (see the three packages https://aur.archlinux.org/pkgbase/ntsync) !!
# !! Not compatible with _protonify, _use_staging, nor any of _use_esync, _use_fsync or _use_fastsync options at this time !!
# !! Not compatible with Valve trees !!
_use_ntsync="false"

# esync - Enable with WINEESYNC=1 envvar - Set to true to enable esync support on plain wine or wine-staging <4.6 (it got merged in wine-staging 4.6). The option is ignored on wine-staging 4.6+
# You may need to raise your fd limits -> https://github.com/zfigura/wine/blob/esync/README.esync
_use_esync="true"

# fsync - Enable with WINEFSYNC=1 envvar - Set to true to enable fsync support on Wine 5.20 and above - Requires kernel 5.16+ or at least linux-tkg 5.13 - https://github.com/ValveSoftware/wine/pull/128
# !! fsync legacy will be used for Wine 5.19 and lower (Mainline 4.7.r168.g29914d583f / Staging 4.9.r7.g197e08b4) !!
# !! https://steamcommunity.com/games/221410/announcements/detail/2957094910196249305 !!
_use_fsync="true"

# Set to false to add DXVK configuration support to Wine's DXGI, allowing for VKD3D to run while keeping DXVK dxgi functionalities.
# !! For DXVK to work properly with this option set to false, you'll need a DXVK build that comes with dxvk_config.dll !!
# Keep in mind Wine's dxgi can be more unstable and less compatible when used with DXVK.
_dxvk_dxgi="true"

# Set to true to pass --with-wayland --with-vulkan configure arguments
# !! Requires a compatible wine tree (9.0+ recommended) !!
_wayland_driver="false"


#### GAME-SPECIFIC PATCHES ####

# Enable support for Proton's Battleye runtime - Depends on Battleye runtime
_proton_battleye_support="true"

# Enable support for Proton's EAC bridge - Depends on Easy Anti Cheat runtime
_proton_eac_support="true"

# Mechwarrior Online fix - https://mwomercs.com/forums/topic/268847-running-the-game-on-ubuntu-steam-play/page__st__20__p__6195387#entry6195387
_mwo_fix="false"

# Resident Evil 4 hack - https://bugs.winehq.org/show_bug.cgi?id=46336
_re4_fix="false"

# Child window support for vk - Fixes World of Final Fantasy, CEMU vulkan renderer and others - https://bugs.winehq.org/show_bug.cgi?id=45277
_childwindow_fix="true"

# Fix for LoL 9.20+ crashing - Depends on _use_staging="true" - https://bugs.winehq.org/show_bug.cgi?id=47198 & https://bugs.winehq.org/show_bug.cgi?id=47915 - Requires vdso32 disabled (as root: `echo 0 > /proc/sys/abi/vsyscall32`)
# lol depends on the following staging patches :
# winebuild-Fake_Dlls, ntdll-RtlCreateUserThread, ntdll-NtContinue, ntdll-SystemExtendedProcessInformation, ntdll-SystemModuleInformation, ntdll-ThreadHideFromDebugger, wow64cpu-Wow64Transition, user32-InternalGetWindowIcon, ntdll-Pipe_SpecialCharacters, ntdll-NtDevicePath, ntdll-NtQueryVirtualMemory, fonts-Missing_Fonts, crypt32-CMS_Certificates, bcrypt-ECDHSecretAgreement, winex11-ime-check-thread-data
_lol920_fix="false"

# Fix for Assetto Corsa performance drop when HUD elements are displayed - https://bugs.winehq.org/show_bug.cgi?id=46955 - Create all kind of issues since b7b1ad0 (5.9 devel), so be careful with that.
_assettocorsa_hudperf_fix="false"

# Fixes for Mortal Kombat 11 - Requires staging, _proton_fs_hack="true", native mfplat (win7) or staging mfplat support and a different GPU driver than RADV
# On Wine 5.2 (up to b1c748c8) and lower, it needs to be toogled on with the WINE_LOW_USER_SPACE_LIMIT=1 envvar
_mk11_fix="true"

# Workaround for Final Fantasy XIV Launcher 404 error - Thanks @varris1 ! - Fixed by d535df42f665a097ec721b10fb49d7b18f899be9 (4.10)
# Found to also enable the new launcher (that came with the 5.1 update) to work *with issues*
_ffxivlauncher_fix="false"

# Background music on King of Fighters 98 and 2002 is silent on Wine-staging and the `xactengine-initial` patchset was found to introduce the issue. Set to "true" to disable it as a workaround.
_kof98_2002_BGM_fix="false"

# Fix for Quake Champions by Paul Gofman for Proton - Depends on _protonify="true" and _use_staging="true"
# This patchset breaks Genshin Impact
_quake_champions_fix="false"


#### OTHER PATCHES ####

# launch with dedicated gpu desktop entry patch - makes an additional desktop entry which launches app with DRI_PRIME set to 1 (only for switchable graphics with mesa drivers)
_launch_with_dedicated_gpu="false"

# Joshua Ashton's take on making wine dialogs and menus less win95-ish - https://github.com/Joshua-Ashton/wine/tree/wine-better-theme
_use_josh_flat_theme="true"


#### PROTON PATCHES ####

# Bypass compositor in fullscreen modes - Typically reduces stuttering and improves performance - https://github.com/ValveSoftware/wine/commit/141ba5cf73029029a5a0bd2cdcfd5f9f9ab7ee7b
_FS_bypass_compositor="false"

# Proton Fullscreen patch - Requires 3.16+ for staging and 5.0+ for mainline - Allows resolution changes for fullscreen games without changing desktop resolution
# You can optionally use nearest neighbour upscaling with the WINE_FULLSCREEN_INTEGER_SCALING envvar
_proton_fs_hack="false"

# Proton compatible rawinput patchset - Only effective when _proton_fs_hack is set to "true" - Requires a tree containing 6d7828e8df68178ca662bc618f7598254afcfbe1 (4.20+)
_proton_rawinput="true"

# Enforce mscvrt Dlls to native then builtin - from Proton
_msvcrt_nativebuiltin="false"

# Use Proton's updated win10 versioning and better productid - Necessary to enable d3d12 (for use with vkd3d) in some games
# Also sets the default wine version to win10 (instead of win7) on Wine <8.1
_win10_default="false"

# Other misc proton patches and hacks - Notably contains fixes for some native vk games (such as Doom Eternal) as well as Rockstar launcher
# Also enables some winevulkan performance optimizations - https://github.com/Joshua-Ashton/proton-wine/tree/winevulkan-opt (fs hack) - https://github.com/Joshua-Ashton/wine/commits/winevulkan-opt-mainline (no fs hack)
_protonify="false"


#### USER PATCHES - See README in ./wine-tkg-userpatches dir for instructions ####

# community patches - add patches (separated by a space) of your choice by name from the community-patches dir - https://github.com/Frogging-Family/community-patches
# example: _community_patches="amdags.mypatch GNUTLShack.mypatch"
_community_patches=""

# Automatically update community-patches from git - set to false if you don't want this behaviour, useful for example if you have your own fork.
_community_patches_auto_update="true"
