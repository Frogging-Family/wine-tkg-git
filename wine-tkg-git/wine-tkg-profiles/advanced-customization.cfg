# 'Wine-to-rule-them-all' - Wine-TkG advanced config file

##
##   This config file contains advanced settings for your build.
##   For the basic configuration, see ../customization.cfg
##

#### NON-MAKEPKG OPTIONS (Won't affect makepkg builds) ####

# Set to true to disable versioning in the installation path of your builds. To change the base name of your build dir, see _PKGNAME_OVERRIDE option.
_nomakepkg_nover="false"


#### MAKEPKG-ONLY OPTIONS (Will ONLY affect makepkg builds) ####

# Set to "true" to add rt prio capability to wineserver
_allow_server_rt_prio="false"

# Set to "true" to add net raw capability to wineserver & wine preloaders
# Notably fixes empty pings on BF4 that may lead to kicks on some servers
_allow_wine_net_raw="false"


#### COMPILER/BUILD OPTIONS ####

# External config file to use - If the given file exists in path, it will override default config (customization.cfg) - Default is ~/.config/frogminer/wine-tkg.cfg
_EXT_CONFIG_PATH=~/.config/frogminer/wine-tkg.cfg

# Set to a string of your choice to override the default dynamic pkgname. Example: "awkward_frog" will result in "wine-tkg-git-awkward_frog" pkgname. You can also use "none" to only get a plain "wine-tkg-git" pkgname.
# On non-makepkg builds, it'll change the base name of the build's dir in a similar fashion.
_PKGNAME_OVERRIDE=""

# Custom compiler root dirs - Leave empty to use system compilers
# Example: CUSTOM_MINGW_PATH="/home/frog/PKGBUILDS/mostlyportable-gcc/mingw-mostlyportable-9.2.0"
# Example: CUSTOM_GCC_PATH="/home/frog/PKGBUILDS/mostlyportable-gcc/gcc-mostlyportable-9.2.0"
CUSTOM_MINGW_PATH=""
CUSTOM_GCC_PATH=""

# Set to true to use custom flags defined by _GCC_FLAGS and _LD_FLAGS. All CPU threads will also be used for building independently of your settings.
# Setting this to false will use your system-wide makepkg flags set in /etc/makepkg.conf (not recommended).
_LOCAL_OPTIMIZED="true"
# Custom GCC flags to use instead of system-wide makepkg flags set in /etc/makepkg.conf. Default is "-pipe -O2 -ftree-vectorize". Don't use -march=native if you want to share your builds accross different machines!
_GCC_FLAGS="-O2 -ftree-vectorize"
# Custom LD flags to use instead of system-wide makepkg flags set in /etc/makepkg.conf. Default is "-pipe -O2 -ftree-vectorize".
_LD_FLAGS="-Wl,-O1,--sort-common,--as-needed"
# Same as _GCC_FLAGS but for cross-compiled binaries.
_CROSS_FLAGS="-O2 -ftree-vectorize"
# Same as _LD_FLAGS but for cross-compiled binaries.
_CROSS_LD_FLAGS="-Wl,-O1,--sort-common,--as-needed"

# By default, tests are disabled to speed up compilation. If you need them for development purposes, set to "true"
_ENABLE_TESTS="false"

# Strip libs for smaller footprint (--strip-unneeded) - Not recommended for debugging
_pkg_strip="true"

# Set to "debug" to enable incremental building for debugging/development. Set to "false" to skip cleanups. Default "true" will enable housecleaning and sanity tasks.
_NUKR="true"

# Set to "true" to generate patchsets for each parts of the tree patching steps, found in `src/wine source dir` (default src/wine-mirror-git)
# 01-reverts - 02-pre-staging - 03-staging - 04-post-staging - 05-hotfixes - 06-userpatches - 07-tags-n-polish
_generate_patchsets="false"

# Set to "true" to log compiler warnings and errors to a debug.log file
_log_errors_to_file="false"

# Set to true to disable 32-bit wine. Doing so will disable WoW64 and break ALL 32-bit apps. Default is "false".
_NOLIB32="false"

# Set to true to disable 64-bit wine. Doing so will only build 32-bit wine and no SUPPORT for 64-bit apps. Default is "false".
_NOLIB64="false"

# Set to true to disable using mingw-gcc to build PE files on 4.9+. Will pass "--without-mingw" to wine's configuration flags.
_NOMINGW="false"

# Set to true to forcefully disable using ccache (else it'll be used if detected).
_NOCCACHE="false"

# Set to true if you do not want to compile your build after its source is ready - For source sharing/debugging
_NOCOMPILE="false"

# Set to true if you want to skip the initial prompt
_NOINITIALPROMPT="false"

# Set to true to build 64-bit and 32-bit wine in parallel (Experimental)
_SINGLE_MAKE="false"

# Optionally set additional dependencies for makepkg builds. Multiple elements should be separated by a space.
# Only affect makepkg
_user_deps=""

# Optionally set additional make dependencies for makepkg builds. Multiple elements should be separated by a space.
# Only affect makepkg
_user_makedeps=""

# In case your Faudio libraries are frogged, set to "true" to ignore the check. You'll be able to build, but xaudio2 support will be frogged.
# Only use this in a case similar to this : your lib32-faudio libs are not found by wine, but you don't care because your game is 64-bit.
_faudio_ignorecheck="false"

# Until supported in wine, WMA playback needs external FAudio. Set to "false" to use wine builtin implementation
_prefer_external_faudio="true"

# Set to true to remove trailing patchmsg strings in logs - Useful to review the list of patches used without fluff
_nopatchmsg="false"


#### EXTERNAL INSTALLATION SETTINGS - !! ONLY AFFECTS MAKEPKG !! ####

# "opt" path
_DEFAULT_EXTERNAL_PATH="/opt"

# Set to true to disable versioning in path for external install. For example, this would strip "opt/wine-tkg-opt-git-4.0.r11.gd2a48f1a" to "opt/wine-tkg-opt-git".
_EXTERNAL_NOVER="false"


#### WINE FLAVOUR SETTINGS ####

# Set to the path of a custom wine source repo if desired. Leave empty to use official wine source.
# Use the _plain_version option (../customization.cfg) to target a specific commit for this source
# ! Make sure to disable staging if your source isn't compatible with it or it will fail to apply !
_custom_wine_source=""

# To build a local source instead of cloning from wine repos, copy the root dir of your build to wine-tkg-git/wine-tkg-git/src/ and set the variable below to the name of that dir
# Example: For a "wine-froggy" dir containing my wine source, I copy it to wine-tkg-git/wine-tkg-git/src/wine-froggy and set _localbuild="wine-froggy"
# Leave empty to use wine repos (default)
_localbuild=""

# use mirror servers (github) for plain wine source. It is usually much faster than main servers but there might be a little delay before it gets synchronized.
_plain_mirrorsrc="true"

# Sets custom configure-args for 64-bit, separated by a space (example: "--without-mingw --with-vkd3d")
_configure_userargs64="--with-x --with-gstreamer --with-xattr"
# Sets custom configure-args for 32-bit, separated by a space (example: "--without-mingw --with-vkd3d")
_configure_userargs32="--with-x --with-gstreamer --with-xattr"


# esync version - https://github.com/zfigura/wine/releases - If you want to use a specific esync version. For 3.20 or higher, use "ce79346". For 3.19 to 3.17, use "b4478b7". For 3.16 and lower, use "5898a69".
# Leave empty for auto-selection depending on detected Wine version (recommended).
_esync_version=""

# Add a configurable spin count to fsync - might help performance but can introduce stability issues/hanging. Try setting WINEFSYNC_SPINCOUNT=100 envvar
_fsync_spincounts="true"

# staging
# You can optionally uncomment the _staging_userargs="" option below to disable desired wine-staging patchsets.
# For example, to disable the 'wined3d-Indexed_Vertex_Blending' patchset, the line below would look like this : _staging_userargs="-W wined3d-Indexed_Vertex_Blending"
# You can also disable multiple patchsets ('wined3d-WINED3D_RS_COLORWRITEENABLE' and 'wined3d-Indexed_Vertex_Blending' in the following example : _staging_userargs="-W wined3d-WINED3D_RS_COLORWRITEENABLE -W wined3d-Indexed_Vertex_Blending"
_staging_userargs="-W ntdll-NtAlertThreadByThreadId"

# legacy gallium nine - This is only available for 4.1-devel (prior to e24b162) and older wine versions
_use_legacy_gallium_nine="false"


#### GAME-SPECIFIC PATCHES ####

# The Sims 3 fix for Nvidia on older than 415.xx drivers - https://bugs.winehq.org/show_bug.cgi?id=45361
_sims3_fix="false"

# Disable staging PA patchset - Some people have had issues with the winepulse staging patchset, usually caused by pulseaudio misconfiguration (also called default configuration)
_staging_pulse_disable="false"


#### OTHER PATCHES ####

# CSMT toggle patch - Corrects the CSMT toggle to be more logical - https://github.com/wine-staging/wine-staging/pull/60/commits/ad474559590a659b3df72ec9965de20c7f51c3a8
_CSMT_toggle="true"

# GLSL toggle patch - Requires staging, ignored if legacy Gallium Nine is used. Gives the ability to use ARB shaders in winecfg, noticable stutter reduction with games using wined3d on Nvidia.
# Enabling this option will interfere with Gallium HUD
_GLSL_toggle="false"

# Disable mime-types registering
_MIME_NOPE="true"

# Disable file-open-associations registering
_FOAS_NOPE="true"

# low latency alsa patch - Requires staging. Using this patch for something else than Osu! isn't recommended and can lead to crashing - https://blog.thepoon.fr/osuLinuxAudioLatency/
_lowlatency_audio="false"

# Enable STAGING_SHARED_MEMORY by default - Depends on staging - EA Origin Client seems to dislike that option - You can set this to false and enable the feature from env var instead (STAGING_SHARED_MEMORY=1) - https://wiki.winehq.org/Wine-Staging_Environment_Variables#Shared_Memory
_stg_shared_mem_default="false"

# Nvidia hate - Prevents building of nvapi/nvapi64, nvcuda, nvcuvid and nvencodeapi/nvencodeapi64 libs. Staging only
_nvidia_hate="false"


#### PROTON PATCHES ####

# Proton SDL Joystick support, FFB steering wheel fixes and improvements, HIDRAW access for devices that support it.
# Can break gamepad support in some games.
_sdl_joy_support="false"

# use CLOCK_MONOTONIC instead of CLOCK_MONOTONIC_RAW in ntdll/server - Increases performance in some CPU limited cases - https://github.com/ValveSoftware/wine/commit/eece6bb2e453e16e99ec61f75fb4152ab4a939d8
_clock_monotonic="true"

# IMAGE_FILE_LARGE_ADDRESS_AWARE override - Will be force-disabled on lower than 3.19 - Useful for 32-bit games hitting address space limitations - Disable with WINE_LARGE_ADDRESS_AWARE=0
_large_address_aware="true"

# Proton Bcrypt patches - Fixes RDR2 online, notably - Replaces Staging's bcrypt-ECDHSecretAgreement
_proton_bcrypt="true"


#### LEGACY PATCHES & CO - These are for older than current master - Some are enabled by default on such trees as they are considered harmless

# Optionally uncomment the line below to use Clang instead of GCC and MinGW-GCC - ! not recommended & not supported ! - It *can* be used to build older wine trees with varying results
#_NOMINGW="true" _NOCCACHE="true" && export CC="clang" && export CXX="clang++" && export CROSSCC="clang"

# pba - Enable with PBA_ENABLE=1 envvar, force-disabled on 3.19 & higher due to known broken state
_use_pba="true"

# The Sims 2 fix - On staging, disables wined3d-WINED3D_RS_COLORWRITEENABLE and wined3d-Indexed_Vertex_Blending patchsets - https://bugs.winehq.org/show_bug.cgi?id=8051 - Obsoleted by D9VK
_sims2_fix="false"

# Disable server-send_hardware_message staging patchset if found - Fixes FFXIV/Warframe/Crysis 3 (etc.) mouse jittering on 3.19 staging and lower. Will cause GTA V to freeze for a second or two on first keyboard input
_server_send_hwmsg_disable="true"

# Path of exile - Fixes DX11 mode not working - Doesn't seem to be needed anymore since Wine 4.1, supposedly since a game patch - https://bugs.winehq.org/show_bug.cgi?id=42695
_poe_fix="false"

# Overwatch mf crash fix from Guy1524 - https://bugs.winehq.org/show_bug.cgi?id=47385 - This will only apply against a wine tree missing b182ba882cfcce7b8769470f49f0fba216095c45, and ignored otherwise
_OW_fix="true"

# Python fix for <=3.18 (backported from zzhiyi's patches) - fix for python and needed for "The Sims 4" to work - replaces staging partial implementation - https://bugs.winehq.org/show_bug.cgi?id=44999 - This will only apply against a wine tree missing 3ebd2f0be30611e6cf00468c2980c5092f91b5b5, and ignored otherwise
_318python_fix="true"

# Workaround for F4SE/SkyrimSE Script Extender - This is a hack and could break stuff - https://github.com/hdmap/wine-hackery/tree/master/f4se - It was fixed upstream with 1aa963ef - 6672fc9d (4.13-devel)
_f4skyrimse_fix="false"

# steam crossover hack for store/web functionality - https://bugs.winehq.org/show_bug.cgi?id=39403
_steam_fix="true"

# Fix crashes or perf issues related to high core count setups - Fixed in 4.0 - https://bugs.winehq.org/show_bug.cgi?id=45453
_highcorecount_fix="true"

# Reverts c6b6935 due to https://bugs.winehq.org/show_bug.cgi?id=47752 - Fixed upstream with cb70373
_c6b6935_revert="true"

# Native dotnet workaround for 4.13+ - https://bugs.winehq.org/show_bug.cgi?id=47633
_nativedotnet_fix="true"

# USVFS (Mod Organizer 2's virtual filesystem) support patch - https://github.com/Tk-Glitch/PKGBUILDS/issues/300 - https://bugs.winehq.org/show_bug.cgi?id=47833
_usvfs_fix="false"

# Faudio - Use the currently installed Faudio packages (both 32 and 64-bit) for xaudio2 - Fixes sound issues in various games. Disables xaudio2 & winepulse staging patchsets
# Support is enabled by default in Wine 4.3+ as well as Wine-staging 4.13+, independently of this setting
_use_faudio="true"

# Revert moving various funcs to kernelbase & ntdll to fix some dll loading issues and ntdll crashes (with Cemu and Blizzard games notably)
# Deprecated as of b7db0b5 - Force-enabled on proton-tkg when using older than b7db0b5 tree
_kernelbase_reverts="false"

# Sets the value of an additional fake refresh rate in virtual desktop mode. Leave empty to keep default - Deprecated as of 6f305dd8 (5.14-devel) unless FS hack is also enabled
_fake_refresh_rate=""

# Fixes Magic The Gathering: Arena (and various other unity games) crashing when downloading game files - https://bugs.winehq.org/show_bug.cgi?id=45546
# ! Introduces potential issues with various programs such as dotnet and directx installers !
_mtga_fix="false"

# Proton workarounds to prevent crashes on some mf functions
_proton_mf_hacks="false"

# Partial fix for systray on plasma 5 - https://bugs.winehq.org/show_bug.cgi?id=38409
_plasma_systray_fix="false"

# Allow making use of the futex2 kernel interface for fsync - Requires a patched kernel such as linux-tkg - https://gitlab.collabora.com/tonyk/wine/-/commits/experimental_5.13
_fsync_futex2="true"


#### USER PATCHES - See README in ./wine-tkg-userpatches dir for instructions ####

# Userpatches variable below must be set to true to enable userpatches support.
_user_patches="true"

# Apply all user patches without confirmation - !!! NOT RECOMMENDED !!!
_user_patches_no_confirm="false"

# Set to "false" to prompt about all non-critical hotfix patches at build time, or "ignore" to ignore all non-critical hotfix patches without confirmation
# Default ("true") will apply all non-critical hotfix patches without confirmation
_hotfixes_no_confirm="true"
# Set to false to disable staging mfplat restoration in case a hotfix is available and _hotfixes_no_confirm is set to "true"
_hotfixansw_staging_mfplat=""
# Set to false to disable staging pulseaudio restoration in case a hotfix is available and _hotfixes_no_confirm is set to "true"
_hotfixansw_staging_pulse=""
